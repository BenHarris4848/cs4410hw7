{
  "labels": {
    "__end__": "1550"
  },
  "code": [
    { "op": "Frame", "name": "__init__", "args": "()" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Store", "value": [{ "type": "atom", "value": "bank" }] },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Store", "value": [{ "type": "atom", "value": "synch" }] },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Store", "value": [{ "type": "atom", "value": "list" }] },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "subseq", "args": "(s, b, e)" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "$n9" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "LoadVar", "value": "b" },
    { "op": "DelVar", "value": "b" },
    { "op": "LoadVar", "value": "e" },
    { "op": "DelVar", "value": "e" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Nary", "arity": 2, "value": ".." },
    { "op": "StoreVar", "value": "$s12" },
    { "op": "LoadVar", "value": "$s12" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "33", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s12", "value": "x" },
    { "op": "LoadVar", "value": "$n9" },
    { "op": "LoadVar", "value": "s" },
    { "op": "LoadVar", "value": "x" },
    { "op": "DelVar", "value": "x" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "IncVar", "value": "$n9" },
    { "op": "Jump", "pc": "21" },
    { "op": "DelVar", "value": "$n9" },
    { "op": "DelVar", "value": "$s12" },
    { "op": "DelVar", "value": "s" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "append", "args": "(s, e)" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "s" },
    { "op": "DelVar", "value": "s" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "e" },
    { "op": "DelVar", "value": "e" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "head", "args": "s" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "s" },
    { "op": "DelVar", "value": "s" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "tail", "args": "s" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "8" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "s" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 2 } },
    { "op": "LoadVar", "value": "s" },
    { "op": "DelVar", "value": "s" },
    { "op": "Nary", "arity": 1, "value": "len" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "sum", "args": "a" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "a" },
    { "op": "DelVar", "value": "a" },
    { "op": "StoreVar", "value": "$s69" },
    { "op": "LoadVar", "value": "$s69" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "98", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s69", "value": "v" },
    { "op": "LoadVar", "value": "result" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "87" },
    { "op": "DelVar", "value": "$s69" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "set", "args": "a" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "LoadVar", "value": "a" },
    { "op": "DelVar", "value": "a" },
    { "op": "StoreVar", "value": "$s84" },
    { "op": "LoadVar", "value": "$s84" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "115", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s84", "value": "v" },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Jump", "pc": "107" },
    { "op": "DelVar", "value": "$s84" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "list", "args": "a" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "$n97" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "LoadVar", "value": "a" },
    { "op": "DelVar", "value": "a" },
    { "op": "StoreVar", "value": "$s100" },
    { "op": "LoadVar", "value": "$s100" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "137", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s100", "value": "v" },
    { "op": "LoadVar", "value": "$n97" },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "IncVar", "value": "$n97" },
    { "op": "Jump", "pc": "127" },
    { "op": "DelVar", "value": "$n97" },
    { "op": "DelVar", "value": "$s100" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "values", "args": "d" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "$n115" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "LoadVar", "value": "d" },
    { "op": "Nary", "arity": 1, "value": "keys" },
    { "op": "StoreVar", "value": "$s118" },
    { "op": "LoadVar", "value": "$s118" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "162", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s118", "value": "k" },
    { "op": "LoadVar", "value": "$n115" },
    { "op": "LoadVar", "value": "d" },
    { "op": "LoadVar", "value": "k" },
    { "op": "DelVar", "value": "k" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "IncVar", "value": "$n115" },
    { "op": "Jump", "pc": "150" },
    { "op": "DelVar", "value": "$n115" },
    { "op": "DelVar", "value": "$s118" },
    { "op": "DelVar", "value": "d" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "items", "args": "d" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "$n136" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "LoadVar", "value": "d" },
    { "op": "Nary", "arity": 1, "value": "keys" },
    { "op": "StoreVar", "value": "$s139" },
    { "op": "LoadVar", "value": "$s139" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "194", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s139", "value": "k" },
    { "op": "LoadVar", "value": "$n136" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "k" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "d" },
    { "op": "LoadVar", "value": "k" },
    { "op": "DelVar", "value": "k" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "IncVar", "value": "$n136" },
    { "op": "Jump", "pc": "176" },
    { "op": "DelVar", "value": "$n136" },
    { "op": "DelVar", "value": "$s139" },
    { "op": "DelVar", "value": "d" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "enumerate", "args": "d" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "index" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "d" },
    { "op": "Nary", "arity": 1, "value": "keys" },
    { "op": "StoreVar", "value": "$s167" },
    { "op": "LoadVar", "value": "$s167" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "236", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s167", "value": "k" },
    { "op": "LoadVar", "value": "result" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "index" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "d" },
    { "op": "LoadVar", "value": "k" },
    { "op": "DelVar", "value": "k" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "index" },
    { "op": "DelVar", "value": "index" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "StoreVar", "value": "index" },
    { "op": "Jump", "pc": "209" },
    { "op": "DelVar", "value": "$s167" },
    { "op": "DelVar", "value": "d" },
    { "op": "DelVar", "value": "index" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "qsort", "args": "a" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "a" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "251", "cond": { "type": "bool", "value": "False" } },
    { "op": "DelVar", "value": "a" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "326" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Push", "value": { "type": "pc", "value": "52" } },
    { "op": "LoadVar", "value": "a" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Push", "value": { "type": "pc", "value": "61" } },
    { "op": "LoadVar", "value": "a" },
    { "op": "DelVar", "value": "a" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "StoreVar", "value": "(pivot, rest)" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "$n216" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "LoadVar", "value": "rest" },
    { "op": "StoreVar", "value": "$s219" },
    { "op": "DelVar", "value": "v" },
    { "op": "LoadVar", "value": "$s219" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "284", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s219", "value": "v" },
    { "op": "LoadVar", "value": "v" },
    { "op": "LoadVar", "value": "pivot" },
    { "op": "Nary", "arity": 2, "value": "<" },
    { "op": "JumpCond", "pc": "269", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "$n216" },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "IncVar", "value": "$n216" },
    { "op": "Jump", "pc": "269" },
    { "op": "DelVar", "value": "$n216" },
    { "op": "DelVar", "value": "$s219" },
    { "op": "StoreVar", "value": "lower" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "$n235" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "LoadVar", "value": "rest" },
    { "op": "DelVar", "value": "rest" },
    { "op": "StoreVar", "value": "$s238" },
    { "op": "DelVar", "value": "v" },
    { "op": "LoadVar", "value": "$s238" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "308", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s238", "value": "v" },
    { "op": "LoadVar", "value": "v" },
    { "op": "LoadVar", "value": "pivot" },
    { "op": "Nary", "arity": 2, "value": ">=" },
    { "op": "JumpCond", "pc": "293", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "$n235" },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "IncVar", "value": "$n235" },
    { "op": "Jump", "pc": "293" },
    { "op": "DelVar", "value": "$n235" },
    { "op": "DelVar", "value": "$s238" },
    { "op": "StoreVar", "value": "higher" },
    { "op": "Push", "value": { "type": "pc", "value": "241" } },
    { "op": "LoadVar", "value": "lower" },
    { "op": "DelVar", "value": "lower" },
    { "op": "Apply" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "pivot" },
    { "op": "DelVar", "value": "pivot" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "pc", "value": "241" } },
    { "op": "LoadVar", "value": "higher" },
    { "op": "DelVar", "value": "higher" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 3, "value": "+" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "sorted", "args": "d" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "241" } },
    { "op": "Push", "value": { "type": "pc", "value": "119" } },
    { "op": "LoadVar", "value": "d" },
    { "op": "DelVar", "value": "d" },
    { "op": "Apply" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "371" },
    { "op": "Frame", "name": "reversed", "args": "d" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "d" },
    { "op": "Nary", "arity": 1, "value": "len" },
    { "op": "StoreVar", "value": "n" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "$n281" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "n" },
    { "op": "Nary", "arity": 2, "value": ".." },
    { "op": "StoreVar", "value": "$s284" },
    { "op": "LoadVar", "value": "$s284" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "365", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s284", "value": "i" },
    { "op": "LoadVar", "value": "$n281" },
    { "op": "LoadVar", "value": "d" },
    { "op": "LoadVar", "value": "n" },
    { "op": "LoadVar", "value": "i" },
    { "op": "DelVar", "value": "i" },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "IncVar", "value": "$n281" },
    { "op": "Jump", "pc": "351" },
    { "op": "DelVar", "value": "$n281" },
    { "op": "DelVar", "value": "$s284" },
    { "op": "DelVar", "value": "d" },
    { "op": "DelVar", "value": "n" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Store", "value": [{ "type": "atom", "value": "bag" }] },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "empty", "args": "()" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "fromSet", "args": "s" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "LoadVar", "value": "s" },
    { "op": "DelVar", "value": "s" },
    { "op": "StoreVar", "value": "$s313" },
    { "op": "LoadVar", "value": "$s313" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "395", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s313", "value": "elt" },
    { "op": "LoadVar", "value": "elt" },
    { "op": "DelVar", "value": "elt" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Jump", "pc": "386" },
    { "op": "DelVar", "value": "$s313" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "fromList", "args": "a" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "a" },
    { "op": "DelVar", "value": "a" },
    { "op": "StoreVar", "value": "$s329" },
    { "op": "LoadVar", "value": "$s329" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "432", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s329", "value": "v" },
    { "op": "LoadVar", "value": "v" },
    { "op": "LoadVar", "value": "result" },
    { "op": "Nary", "arity": 1, "value": "keys" },
    { "op": "Nary", "arity": 2, "value": "in" },
    { "op": "JumpCond", "pc": "425", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "result" }] } },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "LoadVar" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "StoreVar" },
    { "op": "Jump", "pc": "406" },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "result" }] } },
    { "op": "LoadVar", "value": "v" },
    { "op": "DelVar", "value": "v" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "StoreVar" },
    { "op": "Jump", "pc": "406" },
    { "op": "DelVar", "value": "$s329" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "multiplicity", "args": "(bg, elt)" },
    { "op": "DelVar", "value": "result" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "Nary", "arity": 2, "value": "in" },
    { "op": "Nary", "arity": 1, "value": "not" },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "LoadVar", "value": "elt" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "Nary", "arity": 1, "value": "keys" },
    { "op": "Nary", "arity": 2, "value": "in" },
    { "op": "JumpCond", "pc": "458", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "LoadVar", "value": "elt" },
    { "op": "DelVar", "value": "elt" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "462" },
    { "op": "DelVar", "value": "bg" },
    { "op": "DelVar", "value": "elt" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "size", "args": "bg" },
    { "op": "DelVar", "value": "result" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "Nary", "arity": 2, "value": "in" },
    { "op": "Nary", "arity": 1, "value": "not" },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "StoreVar", "value": "$s393" },
    { "op": "LoadVar", "value": "$s393" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "491", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s393", "value": "c" },
    { "op": "LoadVar", "value": "result" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "c" },
    { "op": "DelVar", "value": "c" },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "480" },
    { "op": "DelVar", "value": "$s393" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "bmin", "args": "bg" },
    { "op": "DelVar", "value": "result" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "Nary", "arity": 2, "value": "in" },
    { "op": "Nary", "arity": 1, "value": "not" },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "Nary", "arity": 1, "value": "keys" },
    { "op": "Nary", "arity": 1, "value": "min" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "bmax", "args": "bg" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "Nary", "arity": 1, "value": "keys" },
    { "op": "Nary", "arity": 1, "value": "max" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "bchoose", "args": "bg" },
    { "op": "DelVar", "value": "result" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "Nary", "arity": 2, "value": "in" },
    { "op": "Nary", "arity": 1, "value": "not" },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "Nary", "arity": 1, "value": "keys" },
    { "op": "Choose" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "add", "args": "(bg, elt)" },
    { "op": "DelVar", "value": "result" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "Nary", "arity": 2, "value": "in" },
    { "op": "Nary", "arity": 1, "value": "not" },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "elt" },
    { "op": "LoadVar", "value": "result" },
    { "op": "Nary", "arity": 1, "value": "keys" },
    { "op": "Nary", "arity": 2, "value": "in" },
    { "op": "JumpCond", "pc": "568", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "result" }] } },
    { "op": "LoadVar", "value": "elt" },
    { "op": "DelVar", "value": "elt" },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "LoadVar" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "StoreVar" },
    { "op": "Jump", "pc": "574" },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "result" }] } },
    { "op": "LoadVar", "value": "elt" },
    { "op": "DelVar", "value": "elt" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "StoreVar" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "remove", "args": "(bg, elt)" },
    { "op": "DelVar", "value": "result" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "Nary", "arity": 2, "value": "in" },
    { "op": "Nary", "arity": 1, "value": "not" },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "elt" },
    { "op": "LoadVar", "value": "result" },
    { "op": "Nary", "arity": 1, "value": "keys" },
    { "op": "Nary", "arity": 2, "value": "in" },
    { "op": "JumpCond", "pc": "601", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "result" },
    { "op": "LoadVar", "value": "elt" },
    { "op": "Apply" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": ">" },
    { "op": "Jump", "pc": "602" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "JumpCond", "pc": "611", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "result" }] } },
    { "op": "LoadVar", "value": "elt" },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "LoadVar" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "StoreVar" },
    { "op": "LoadVar", "value": "result" },
    { "op": "LoadVar", "value": "elt" },
    { "op": "Apply" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": "<=" },
    { "op": "JumpCond", "pc": "622", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "result" }] } },
    { "op": "LoadVar", "value": "elt" },
    { "op": "DelVar", "value": "elt" },
    { "op": "Address" },
    { "op": "DelVar" },
    { "op": "DelVar", "value": "elt" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "combinations", "args": "(bg, k)" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "k" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "640", "cond": { "type": "bool", "value": "False" } },
    { "op": "DelVar", "value": "bg" },
    { "op": "DelVar", "value": "k" },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "Push", "value": { "type": "pc", "value": "374" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Apply" },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "725" },
    { "op": "Push", "value": { "type": "pc", "value": "464" } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "n" },
    { "op": "LoadVar", "value": "k" },
    { "op": "LoadVar", "value": "n" },
    { "op": "Nary", "arity": 2, "value": ">" },
    { "op": "JumpCond", "pc": "654", "cond": { "type": "bool", "value": "False" } },
    { "op": "DelVar", "value": "bg" },
    { "op": "DelVar", "value": "k" },
    { "op": "DelVar", "value": "n" },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "725" },
    { "op": "LoadVar", "value": "k" },
    { "op": "LoadVar", "value": "n" },
    { "op": "DelVar", "value": "n" },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "666", "cond": { "type": "bool", "value": "False" } },
    { "op": "DelVar", "value": "k" },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "725" },
    { "op": "Push", "value": { "type": "pc", "value": "494" } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "hd" },
    { "op": "Push", "value": { "type": "pc", "value": "576" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "bg" },
    { "op": "DelVar", "value": "bg" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "hd" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "tl" },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "Push", "value": { "type": "pc", "value": "625" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "tl" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "k" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "$s570" },
    { "op": "LoadVar", "value": "$s570" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "710", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s570", "value": "x" },
    { "op": "Push", "value": { "type": "pc", "value": "539" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "x" },
    { "op": "DelVar", "value": "x" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "hd" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Jump", "pc": "694" },
    { "op": "DelVar", "value": "$s570" },
    { "op": "DelVar", "value": "hd" },
    { "op": "Push", "value": { "type": "pc", "value": "625" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "tl" },
    { "op": "DelVar", "value": "tl" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "k" },
    { "op": "DelVar", "value": "k" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 2, "value": "|" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "tas", "args": "lk" },
    { "op": "DelVar", "value": "result" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "lk" },
    { "op": "Load" },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "lk" },
    { "op": "DelVar", "value": "lk" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "cas", "args": "(p, old, new)" },
    { "op": "DelVar", "value": "result" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "p" },
    { "op": "Load" },
    { "op": "LoadVar", "value": "old" },
    { "op": "DelVar", "value": "old" },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "result" },
    { "op": "JumpCond", "pc": "756", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "p" },
    { "op": "DelVar", "value": "p" },
    { "op": "LoadVar", "value": "new" },
    { "op": "DelVar", "value": "new" },
    { "op": "Store" },
    { "op": "DelVar", "value": "new" },
    { "op": "DelVar", "value": "p" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "BinSema", "args": "acquired" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "acquired" },
    { "op": "DelVar", "value": "acquired" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "Lock", "args": "()" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "761" } },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "acquired", "args": "binsema" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "binsema" },
    { "op": "DelVar", "value": "binsema" },
    { "op": "Load" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "acquire", "args": "binsema" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "ReadonlyInc" },
    { "op": "LoadVar", "value": "binsema" },
    { "op": "Load" },
    { "op": "Nary", "arity": 1, "value": "not" },
    { "op": "JumpCond", "pc": "792", "cond": { "type": "bool", "value": "False" } },
    { "op": "Jump", "pc": "795" },
    { "op": "ReadonlyDec" },
    { "op": "AtomicDec" },
    { "op": "Jump", "pc": "785" },
    { "op": "ReadonlyDec" },
    { "op": "LoadVar", "value": "binsema" },
    { "op": "DelVar", "value": "binsema" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "release", "args": "binsema" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "binsema" },
    { "op": "Load" },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "binsema" },
    { "op": "DelVar", "value": "binsema" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "held", "args": "binsema" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "binsema" },
    { "op": "DelVar", "value": "binsema" },
    { "op": "Load" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "Condition", "args": "()" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "374" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "wait", "args": "(c, lk)" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "StoreVar", "value": "cnt" },
    { "op": "DelVar", "value": "cnt" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Save" },
    { "op": "Continue" },
    { "op": "StoreVar", "value": "((), ctx)" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "Push", "value": { "type": "pc", "value": "435" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "c" },
    { "op": "Load" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "ctx" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "cnt" },
    { "op": "LoadVar", "value": "c" },
    { "op": "Push", "value": { "type": "pc", "value": "539" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "c" },
    { "op": "Load" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "ctx" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Apply" },
    { "op": "Store" },
    { "op": "LoadVar", "value": "lk" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "ReadonlyInc" },
    { "op": "LoadVar", "value": "lk" },
    { "op": "Load" },
    { "op": "Nary", "arity": 1, "value": "not" },
    { "op": "JumpCond", "pc": "890", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "pc", "value": "435" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "c" },
    { "op": "Load" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "ctx" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Apply" },
    { "op": "LoadVar", "value": "cnt" },
    { "op": "Nary", "arity": 2, "value": "<=" },
    { "op": "Jump", "pc": "891" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "JumpCond", "pc": "896", "cond": { "type": "bool", "value": "False" } },
    { "op": "DelVar", "value": "c" },
    { "op": "DelVar", "value": "cnt" },
    { "op": "DelVar", "value": "ctx" },
    { "op": "Jump", "pc": "899" },
    { "op": "ReadonlyDec" },
    { "op": "AtomicDec" },
    { "op": "Jump", "pc": "871" },
    { "op": "ReadonlyDec" },
    { "op": "LoadVar", "value": "lk" },
    { "op": "DelVar", "value": "lk" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "notify", "args": "c" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "c" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "pc", "value": "374" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Apply" },
    { "op": "Nary", "arity": 2, "value": "!=" },
    { "op": "JumpCond", "pc": "932", "cond": { "type": "bool", "value": "False" } },
    { "op": "LoadVar", "value": "c" },
    { "op": "Push", "value": { "type": "pc", "value": "576" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "c" },
    { "op": "Load" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Push", "value": { "type": "pc", "value": "521" } },
    { "op": "LoadVar", "value": "c" },
    { "op": "DelVar", "value": "c" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Apply" },
    { "op": "Store" },
    { "op": "DelVar", "value": "c" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "notifyAll", "args": "c" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "c" },
    { "op": "DelVar", "value": "c" },
    { "op": "Push", "value": { "type": "pc", "value": "374" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Apply" },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "Semaphore", "args": "cnt" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "cnt" },
    { "op": "DelVar", "value": "cnt" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "P", "args": "sema" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "ReadonlyInc" },
    { "op": "LoadVar", "value": "sema" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": ">" },
    { "op": "JumpCond", "pc": "963", "cond": { "type": "bool", "value": "False" } },
    { "op": "Jump", "pc": "966" },
    { "op": "ReadonlyDec" },
    { "op": "AtomicDec" },
    { "op": "Jump", "pc": "955" },
    { "op": "ReadonlyDec" },
    { "op": "LoadVar", "value": "sema" },
    { "op": "DelVar", "value": "sema" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "V", "args": "sema" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "sema" },
    { "op": "DelVar", "value": "sema" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "Queue", "args": "()" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "get", "args": "q" },
    { "op": "DelVar", "value": "result" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "ReadonlyInc" },
    { "op": "LoadVar", "value": "q" },
    { "op": "Load" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Nary", "arity": 2, "value": "!=" },
    { "op": "JumpCond", "pc": "1005", "cond": { "type": "bool", "value": "False" } },
    { "op": "Jump", "pc": "1008" },
    { "op": "ReadonlyDec" },
    { "op": "AtomicDec" },
    { "op": "Jump", "pc": "996" },
    { "op": "ReadonlyDec" },
    { "op": "Push", "value": { "type": "pc", "value": "52" } },
    { "op": "LoadVar", "value": "q" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "StoreVar", "value": "result" },
    { "op": "LoadVar", "value": "q" },
    { "op": "Push", "value": { "type": "pc", "value": "61" } },
    { "op": "LoadVar", "value": "q" },
    { "op": "DelVar", "value": "q" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "put", "args": "(q, item)" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "LoadVar", "value": "q" },
    { "op": "Push", "value": { "type": "pc", "value": "39" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "q" },
    { "op": "DelVar", "value": "q" },
    { "op": "Load" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "item" },
    { "op": "DelVar", "value": "item" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Apply" },
    { "op": "Store" },
    { "op": "AtomicDec" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "Bank", "args": "n" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "atom", "value": "balance" } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Push", "value": { "type": "pc", "value": "768" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Apply" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "LoadVar", "value": "n" },
    { "op": "DelVar", "value": "n" },
    { "op": "Nary", "arity": 2, "value": "*" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "inquiry", "args": "(bank, acct)" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "784" } },
    { "op": "LoadVar", "value": "bank" },
    { "op": "LoadVar", "value": "acct" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "LoadVar", "value": "bank" },
    { "op": "LoadVar", "value": "acct" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "balance" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "StoreVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "803" } },
    { "op": "LoadVar", "value": "bank" },
    { "op": "DelVar", "value": "bank" },
    { "op": "LoadVar", "value": "acct" },
    { "op": "DelVar", "value": "acct" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "deposit", "args": "(bank, acct, amount)" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "784" } },
    { "op": "LoadVar", "value": "bank" },
    { "op": "LoadVar", "value": "acct" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "LoadVar", "value": "bank" },
    { "op": "LoadVar", "value": "acct" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "balance" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "LoadVar", "value": "amount" },
    { "op": "DelVar", "value": "amount" },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "803" } },
    { "op": "LoadVar", "value": "bank" },
    { "op": "DelVar", "value": "bank" },
    { "op": "LoadVar", "value": "acct" },
    { "op": "DelVar", "value": "acct" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "withdraw", "args": "(bank, acct, amount)" },
    { "op": "DelVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "784" } },
    { "op": "LoadVar", "value": "bank" },
    { "op": "LoadVar", "value": "acct" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "LoadVar", "value": "bank" },
    { "op": "LoadVar", "value": "acct" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "balance" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "LoadVar", "value": "amount" },
    { "op": "Nary", "arity": 2, "value": "<" },
    { "op": "JumpCond", "pc": "1155", "cond": { "type": "bool", "value": "False" } },
    { "op": "DelVar", "value": "amount" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "1168" },
    { "op": "LoadVar", "value": "bank" },
    { "op": "LoadVar", "value": "acct" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "balance" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "LoadVar", "value": "amount" },
    { "op": "DelVar", "value": "amount" },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Store" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "803" } },
    { "op": "LoadVar", "value": "bank" },
    { "op": "DelVar", "value": "bank" },
    { "op": "LoadVar", "value": "acct" },
    { "op": "DelVar", "value": "acct" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1298" },
    { "op": "Frame", "name": "transfer", "args": "(bank, acctFrom, acctTo, amount)" },
    { "op": "DelVar", "value": "result" },
    { "op": "LoadVar", "value": "acctFrom" },
    { "op": "LoadVar", "value": "acctTo" },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "1194", "cond": { "type": "bool", "value": "False" } },
    { "op": "DelVar", "value": "acctFrom" },
    { "op": "DelVar", "value": "acctTo" },
    { "op": "DelVar", "value": "amount" },
    { "op": "DelVar", "value": "bank" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "1297" },
    { "op": "Push", "value": { "type": "pc", "value": "784" } },
    { "op": "LoadVar", "value": "bank" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "acctFrom" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "acctTo" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Nary", "arity": 1, "value": "min" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Push", "value": { "type": "pc", "value": "784" } },
    { "op": "LoadVar", "value": "bank" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "acctFrom" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "acctTo" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Nary", "arity": 1, "value": "max" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "LoadVar", "value": "bank" },
    { "op": "LoadVar", "value": "acctFrom" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "balance" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "LoadVar", "value": "amount" },
    { "op": "Nary", "arity": 2, "value": "<" },
    { "op": "JumpCond", "pc": "1239", "cond": { "type": "bool", "value": "False" } },
    { "op": "DelVar", "value": "amount" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Jump", "pc": "1262" },
    { "op": "LoadVar", "value": "bank" },
    { "op": "LoadVar", "value": "acctFrom" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "balance" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "LoadVar", "value": "amount" },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Store" },
    { "op": "LoadVar", "value": "bank" },
    { "op": "LoadVar", "value": "acctTo" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "balance" } },
    { "op": "Address" },
    { "op": "Dup" },
    { "op": "Load" },
    { "op": "LoadVar", "value": "amount" },
    { "op": "DelVar", "value": "amount" },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "StoreVar", "value": "result" },
    { "op": "Push", "value": { "type": "pc", "value": "803" } },
    { "op": "LoadVar", "value": "bank" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "acctFrom" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "acctTo" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Nary", "arity": 1, "value": "max" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Push", "value": { "type": "pc", "value": "803" } },
    { "op": "LoadVar", "value": "bank" },
    { "op": "DelVar", "value": "bank" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "acctFrom" },
    { "op": "DelVar", "value": "acctFrom" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "acctTo" },
    { "op": "DelVar", "value": "acctTo" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Nary", "arity": 1, "value": "min" },
    { "op": "Address" },
    { "op": "Push", "value": { "type": "atom", "value": "mutex" } },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Apply" },
    { "op": "Pop" },
    { "op": "Return" },
    { "op": "Push", "value": { "type": "pc", "value": "1043" } },
    { "op": "Push", "value": { "type": "dict", "value": [{ "key": { "type": "int", "value": 0 }, "value": { "type": "int", "value": 2 } }, { "key": { "type": "int", "value": 1 }, "value": { "type": "int", "value": 2 } }] } },
    { "op": "Apply" },
    { "op": "Store", "value": [{ "type": "atom", "value": "b" }] },
    { "op": "Jump", "pc": "1454" },
    { "op": "Frame", "name": "inq_test", "args": "acc" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Push", "value": { "type": "atom", "value": "call inquiry: " } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Load", "value": [{ "type": "atom", "value": "self" }] },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Print" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "Push", "value": { "type": "pc", "value": "1063" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "b" }] } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "acc" },
    { "op": "DelVar", "value": "acc" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Apply" },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Push", "value": { "type": "atom", "value": "done inquiry: " } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Load", "value": [{ "type": "atom", "value": "self" }] },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Print" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1454" },
    { "op": "Frame", "name": "deposit_test", "args": "(acc, amount)" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Push", "value": { "type": "atom", "value": "call deposit: " } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Load", "value": [{ "type": "atom", "value": "self" }] },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Print" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "Push", "value": { "type": "pc", "value": "1063" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "b" }] } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "acc" },
    { "op": "DelVar", "value": "acc" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 2 } },
    { "op": "LoadVar", "value": "amount" },
    { "op": "DelVar", "value": "amount" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Apply" },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Push", "value": { "type": "atom", "value": "done deposit: " } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Load", "value": [{ "type": "atom", "value": "self" }] },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Print" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1454" },
    { "op": "Frame", "name": "withdraw_test", "args": "(acc, amount)" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Push", "value": { "type": "atom", "value": "call withdraw: " } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Load", "value": [{ "type": "atom", "value": "self" }] },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Print" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "Push", "value": { "type": "pc", "value": "1131" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "b" }] } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "acc" },
    { "op": "DelVar", "value": "acc" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 2 } },
    { "op": "LoadVar", "value": "amount" },
    { "op": "DelVar", "value": "amount" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Apply" },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Push", "value": { "type": "atom", "value": "done withdraw: " } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Load", "value": [{ "type": "atom", "value": "self" }] },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Print" },
    { "op": "Return" },
    { "op": "Jump", "pc": "1454" },
    { "op": "Frame", "name": "transfer_test", "args": "(acctFrom, acctTo, amount)" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Push", "value": { "type": "atom", "value": "call transfer: " } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Load", "value": [{ "type": "atom", "value": "self" }] },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Print" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "Push", "value": { "type": "pc", "value": "1181" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "b" }] } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "acctFrom" },
    { "op": "DelVar", "value": "acctFrom" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 2 } },
    { "op": "LoadVar", "value": "acctTo" },
    { "op": "DelVar", "value": "acctTo" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 3 } },
    { "op": "LoadVar", "value": "amount" },
    { "op": "DelVar", "value": "amount" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Apply" },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Push", "value": { "type": "atom", "value": "done transfer: " } },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Load", "value": [{ "type": "atom", "value": "self" }] },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Print" },
    { "op": "Return" },
    { "op": "Push", "value": { "type": "set", "value": [{ "type": "int", "value": 1 }] } },
    { "op": "StoreVar", "value": "$s1270" },
    { "op": "LoadVar", "value": "$s1270" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "1469", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s1270", "value": "i" },
    { "op": "Push", "value": { "type": "set", "value": [{ "type": "int", "value": 1 }, { "type": "int", "value": 2 }, { "type": "int", "value": 3 }, { "type": "int", "value": 4 }, { "type": "int", "value": 5 }] } },
    { "op": "Choose" },
    { "op": "Store", "value": [{ "type": "atom", "value": "amount" }] },
    { "op": "Push", "value": { "type": "pc", "value": "1303" } },
    { "op": "LoadVar", "value": "i" },
    { "op": "DelVar", "value": "i" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Spawn", "eternal": "False" },
    { "op": "Jump", "pc": "1456" },
    { "op": "DelVar", "value": "$s1270" },
    { "op": "Push", "value": { "type": "set", "value": [{ "type": "int", "value": 1 }, { "type": "int", "value": 2 }] } },
    { "op": "StoreVar", "value": "$s1284" },
    { "op": "LoadVar", "value": "$s1284" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "1491", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s1284", "value": "i" },
    { "op": "Push", "value": { "type": "set", "value": [{ "type": "int", "value": 1 }, { "type": "int", "value": 2 }, { "type": "int", "value": 3 }, { "type": "int", "value": 4 }, { "type": "int", "value": 5 }] } },
    { "op": "Choose" },
    { "op": "Store", "value": [{ "type": "atom", "value": "amount" }] },
    { "op": "Push", "value": { "type": "pc", "value": "1337" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "i" },
    { "op": "DelVar", "value": "i" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Load", "value": [{ "type": "atom", "value": "amount" }] },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Spawn", "eternal": "False" },
    { "op": "Jump", "pc": "1472" },
    { "op": "DelVar", "value": "$s1284" },
    { "op": "Push", "value": { "type": "set", "value": [{ "type": "int", "value": 1 }] } },
    { "op": "StoreVar", "value": "$s1304" },
    { "op": "LoadVar", "value": "$s1304" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "1513", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s1304", "value": "i" },
    { "op": "Push", "value": { "type": "set", "value": [{ "type": "int", "value": 1 }, { "type": "int", "value": 2 }, { "type": "int", "value": 3 }, { "type": "int", "value": 4 }, { "type": "int", "value": 5 }] } },
    { "op": "Choose" },
    { "op": "Store", "value": [{ "type": "atom", "value": "amount" }] },
    { "op": "Push", "value": { "type": "pc", "value": "1375" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "i" },
    { "op": "DelVar", "value": "i" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Load", "value": [{ "type": "atom", "value": "amount" }] },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Spawn", "eternal": "False" },
    { "op": "Jump", "pc": "1494" },
    { "op": "DelVar", "value": "$s1304" },
    { "op": "Push", "value": { "type": "set", "value": [{ "type": "int", "value": 1 }, { "type": "int", "value": 2 }] } },
    { "op": "StoreVar", "value": "$s1324" },
    { "op": "LoadVar", "value": "$s1324" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "1547", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s1324", "value": "i" },
    { "op": "Push", "value": { "type": "set", "value": [{ "type": "int", "value": 1 }, { "type": "int", "value": 2 }] } },
    { "op": "StoreVar", "value": "$s1330" },
    { "op": "LoadVar", "value": "$s1330" },
    { "op": "Nary", "arity": 1, "value": "IsEmpty" },
    { "op": "JumpCond", "pc": "1544", "cond": { "type": "bool", "value": "True" } },
    { "op": "Cut", "set": "$s1330", "value": "j" },
    { "op": "Push", "value": { "type": "set", "value": [{ "type": "int", "value": 1 }, { "type": "int", "value": 2 }, { "type": "int", "value": 3 }, { "type": "int", "value": 4 }, { "type": "int", "value": 5 }] } },
    { "op": "Choose" },
    { "op": "Store", "value": [{ "type": "atom", "value": "amount" }] },
    { "op": "Push", "value": { "type": "pc", "value": "1413" } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "LoadVar", "value": "i" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "j" },
    { "op": "DelVar", "value": "j" },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "int", "value": 2 } },
    { "op": "Load", "value": [{ "type": "atom", "value": "amount" }] },
    { "op": "Nary", "arity": 3, "value": "DictAdd" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Spawn", "eternal": "False" },
    { "op": "Jump", "pc": "1522" },
    { "op": "DelVar", "value": "$s1330" },
    { "op": "DelVar", "value": "i" },
    { "op": "Jump", "pc": "1516" },
    { "op": "DelVar", "value": "$s1324" },
    { "op": "Return" },
    { "op": "DelVar", "value": "result" }
  ],
  "pretty": [
    ["Frame __init__ ()","start of method __init__"],
    ["Push ()","push constant ()"],
    ["Store bank","pop a value and store it in shared variable bank"],
    ["Push ()","push constant ()"],
    ["Store synch","pop a value and store it in shared variable synch"],
    ["Push ()","push constant ()"],
    ["Store list","pop a value and store it in shared variable list"],
    ["Jump 371","set program counter to 371"],
    ["Frame subseq (s, b, e)","start of method subseq"],
    ["DelVar result","delete method variable result"],
    ["Push 0","push constant 0"],
    ["StoreVar $n9","pop a value and store in $n9"],
    ["Push ()","push constant ()"],
    ["LoadVar b","push the value of b"],
    ["DelVar b","delete method variable b"],
    ["LoadVar e","push the value of e"],
    ["DelVar e","delete method variable e"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["2-ary ..","pop 2 values and push the result of applying .."],
    ["StoreVar $s12","pop a value and store in $s12"],
    ["LoadVar $s12","push the value of $s12"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 33","pop a value and jump to 33 if the value is True"],
    ["Cut($s12, x)","remove smallest element from $s12 and assign to x"],
    ["LoadVar $n9","push the value of $n9"],
    ["LoadVar s","push the value of s"],
    ["LoadVar x","push the value of x"],
    ["DelVar x","delete method variable x"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["IncVar $n9","increment the value of $n9"],
    ["Jump 21","set program counter to 21"],
    ["DelVar $n9","delete method variable $n9"],
    ["DelVar $s12","delete method variable $s12"],
    ["DelVar s","delete method variable s"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","set program counter to 371"],
    ["Frame append (s, e)","start of method append"],
    ["DelVar result","delete method variable result"],
    ["LoadVar s","push the value of s"],
    ["DelVar s","delete method variable s"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar e","push the value of e"],
    ["DelVar e","delete method variable e"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","set program counter to 371"],
    ["Frame head s","start of method head"],
    ["DelVar result","delete method variable result"],
    ["LoadVar s","push the value of s"],
    ["DelVar s","delete method variable s"],
    ["Push 0","push constant 0"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","set program counter to 371"],
    ["Frame tail s","start of method tail"],
    ["DelVar result","delete method variable result"],
    ["Push PC(8)","push constant PC(8)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar s","push the value of s"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["Push 1","push constant 1"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 2","push constant 2"],
    ["LoadVar s","push the value of s"],
    ["DelVar s","delete method variable s"],
    ["1-ary len","pop 1 value and push the result of applying len"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","set program counter to 371"],
    ["Frame sum a","start of method sum"],
    ["DelVar result","delete method variable result"],
    ["Push 0","push constant 0"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar a","push the value of a"],
    ["DelVar a","delete method variable a"],
    ["StoreVar $s69","pop a value and store in $s69"],
    ["LoadVar $s69","push the value of $s69"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 98","pop a value and jump to 98 if the value is True"],
    ["Cut($s69, v)","remove smallest element from $s69 and assign to v"],
    ["LoadVar result","push the value of result"],
    ["DelVar result","delete method variable result"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 87","set program counter to 87"],
    ["DelVar $s69","delete method variable $s69"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","set program counter to 371"],
    ["Frame set a","start of method set"],
    ["DelVar result","delete method variable result"],
    ["Push {}","push constant {}"],
    ["LoadVar a","push the value of a"],
    ["DelVar a","delete method variable a"],
    ["StoreVar $s84","pop a value and store in $s84"],
    ["LoadVar $s84","push the value of $s84"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 115","pop a value and jump to 115 if the value is True"],
    ["Cut($s84, v)","remove smallest element from $s84 and assign to v"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["Jump 107","set program counter to 107"],
    ["DelVar $s84","delete method variable $s84"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","set program counter to 371"],
    ["Frame list a","start of method list"],
    ["DelVar result","delete method variable result"],
    ["Push 0","push constant 0"],
    ["StoreVar $n97","pop a value and store in $n97"],
    ["Push ()","push constant ()"],
    ["LoadVar a","push the value of a"],
    ["DelVar a","delete method variable a"],
    ["StoreVar $s100","pop a value and store in $s100"],
    ["LoadVar $s100","push the value of $s100"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 137","pop a value and jump to 137 if the value is True"],
    ["Cut($s100, v)","remove smallest element from $s100 and assign to v"],
    ["LoadVar $n97","push the value of $n97"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["IncVar $n97","increment the value of $n97"],
    ["Jump 127","set program counter to 127"],
    ["DelVar $n97","delete method variable $n97"],
    ["DelVar $s100","delete method variable $s100"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","set program counter to 371"],
    ["Frame values d","start of method values"],
    ["DelVar result","delete method variable result"],
    ["Push 0","push constant 0"],
    ["StoreVar $n115","pop a value and store in $n115"],
    ["Push ()","push constant ()"],
    ["LoadVar d","push the value of d"],
    ["1-ary keys","pop 1 value and push the result of applying keys"],
    ["StoreVar $s118","pop a value and store in $s118"],
    ["LoadVar $s118","push the value of $s118"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 162","pop a value and jump to 162 if the value is True"],
    ["Cut($s118, k)","remove smallest element from $s118 and assign to k"],
    ["LoadVar $n115","push the value of $n115"],
    ["LoadVar d","push the value of d"],
    ["LoadVar k","push the value of k"],
    ["DelVar k","delete method variable k"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["IncVar $n115","increment the value of $n115"],
    ["Jump 150","set program counter to 150"],
    ["DelVar $n115","delete method variable $n115"],
    ["DelVar $s118","delete method variable $s118"],
    ["DelVar d","delete method variable d"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","set program counter to 371"],
    ["Frame items d","start of method items"],
    ["DelVar result","delete method variable result"],
    ["Push 0","push constant 0"],
    ["StoreVar $n136","pop a value and store in $n136"],
    ["Push ()","push constant ()"],
    ["LoadVar d","push the value of d"],
    ["1-ary keys","pop 1 value and push the result of applying keys"],
    ["StoreVar $s139","pop a value and store in $s139"],
    ["LoadVar $s139","push the value of $s139"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 194","pop a value and jump to 194 if the value is True"],
    ["Cut($s139, k)","remove smallest element from $s139 and assign to k"],
    ["LoadVar $n136","push the value of $n136"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar k","push the value of k"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar d","push the value of d"],
    ["LoadVar k","push the value of k"],
    ["DelVar k","delete method variable k"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["IncVar $n136","increment the value of $n136"],
    ["Jump 176","set program counter to 176"],
    ["DelVar $n136","delete method variable $n136"],
    ["DelVar $s139","delete method variable $s139"],
    ["DelVar d","delete method variable d"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","set program counter to 371"],
    ["Frame enumerate d","start of method enumerate"],
    ["DelVar result","delete method variable result"],
    ["Push 0","push constant 0"],
    ["StoreVar index","pop a value and store in index"],
    ["Push ()","push constant ()"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar d","push the value of d"],
    ["1-ary keys","pop 1 value and push the result of applying keys"],
    ["StoreVar $s167","pop a value and store in $s167"],
    ["LoadVar $s167","push the value of $s167"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 236","pop a value and jump to 236 if the value is True"],
    ["Cut($s167, k)","remove smallest element from $s167 and assign to k"],
    ["LoadVar result","push the value of result"],
    ["DelVar result","delete method variable result"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar index","push the value of index"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar d","push the value of d"],
    ["LoadVar k","push the value of k"],
    ["DelVar k","delete method variable k"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar index","push the value of index"],
    ["DelVar index","delete method variable index"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["StoreVar index","pop a value and store in index"],
    ["Jump 209","set program counter to 209"],
    ["DelVar $s167","delete method variable $s167"],
    ["DelVar d","delete method variable d"],
    ["DelVar index","delete method variable index"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","set program counter to 371"],
    ["Frame qsort a","start of method qsort"],
    ["DelVar result","delete method variable result"],
    ["LoadVar a","push the value of a"],
    ["Push ()","push constant ()"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond False 251","pop a value and jump to 251 if the value is False"],
    ["DelVar a","delete method variable a"],
    ["Push ()","push constant ()"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 326","set program counter to 326"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["Push PC(52)","push constant PC(52)"],
    ["LoadVar a","push the value of a"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["Push PC(61)","push constant PC(61)"],
    ["LoadVar a","push the value of a"],
    ["DelVar a","delete method variable a"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["StoreVar (pivot, rest)","pop a value and store in (pivot, rest)"],
    ["Push 0","push constant 0"],
    ["StoreVar $n216","pop a value and store in $n216"],
    ["Push ()","push constant ()"],
    ["LoadVar rest","push the value of rest"],
    ["StoreVar $s219","pop a value and store in $s219"],
    ["DelVar v","delete method variable v"],
    ["LoadVar $s219","push the value of $s219"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 284","pop a value and jump to 284 if the value is True"],
    ["Cut($s219, v)","remove smallest element from $s219 and assign to v"],
    ["LoadVar v","push the value of v"],
    ["LoadVar pivot","push the value of pivot"],
    ["2-ary <","pop 2 values and push the result of applying <"],
    ["JumpCond False 269","pop a value and jump to 269 if the value is False"],
    ["LoadVar $n216","push the value of $n216"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["IncVar $n216","increment the value of $n216"],
    ["Jump 269","set program counter to 269"],
    ["DelVar $n216","delete method variable $n216"],
    ["DelVar $s219","delete method variable $s219"],
    ["StoreVar lower","pop a value and store in lower"],
    ["Push 0","push constant 0"],
    ["StoreVar $n235","pop a value and store in $n235"],
    ["Push ()","push constant ()"],
    ["LoadVar rest","push the value of rest"],
    ["DelVar rest","delete method variable rest"],
    ["StoreVar $s238","pop a value and store in $s238"],
    ["DelVar v","delete method variable v"],
    ["LoadVar $s238","push the value of $s238"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 308","pop a value and jump to 308 if the value is True"],
    ["Cut($s238, v)","remove smallest element from $s238 and assign to v"],
    ["LoadVar v","push the value of v"],
    ["LoadVar pivot","push the value of pivot"],
    ["2-ary >=","pop 2 values and push the result of applying >="],
    ["JumpCond False 293","pop a value and jump to 293 if the value is False"],
    ["LoadVar $n235","push the value of $n235"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["IncVar $n235","increment the value of $n235"],
    ["Jump 293","set program counter to 293"],
    ["DelVar $n235","delete method variable $n235"],
    ["DelVar $s238","delete method variable $s238"],
    ["StoreVar higher","pop a value and store in higher"],
    ["Push PC(241)","push constant PC(241)"],
    ["LoadVar lower","push the value of lower"],
    ["DelVar lower","delete method variable lower"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar pivot","push the value of pivot"],
    ["DelVar pivot","delete method variable pivot"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push PC(241)","push constant PC(241)"],
    ["LoadVar higher","push the value of higher"],
    ["DelVar higher","delete method variable higher"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["3-ary +","pop 3 values and push the result of applying +"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","set program counter to 371"],
    ["Frame sorted d","start of method sorted"],
    ["DelVar result","delete method variable result"],
    ["Push PC(241)","push constant PC(241)"],
    ["Push PC(119)","push constant PC(119)"],
    ["LoadVar d","push the value of d"],
    ["DelVar d","delete method variable d"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 371","set program counter to 371"],
    ["Frame reversed d","start of method reversed"],
    ["DelVar result","delete method variable result"],
    ["LoadVar d","push the value of d"],
    ["1-ary len","pop 1 value and push the result of applying len"],
    ["StoreVar n","pop a value and store in n"],
    ["Push 0","push constant 0"],
    ["StoreVar $n281","pop a value and store in $n281"],
    ["Push ()","push constant ()"],
    ["Push 1","push constant 1"],
    ["LoadVar n","push the value of n"],
    ["2-ary ..","pop 2 values and push the result of applying .."],
    ["StoreVar $s284","pop a value and store in $s284"],
    ["LoadVar $s284","push the value of $s284"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 365","pop a value and jump to 365 if the value is True"],
    ["Cut($s284, i)","remove smallest element from $s284 and assign to i"],
    ["LoadVar $n281","push the value of $n281"],
    ["LoadVar d","push the value of d"],
    ["LoadVar n","push the value of n"],
    ["LoadVar i","push the value of i"],
    ["DelVar i","delete method variable i"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["IncVar $n281","increment the value of $n281"],
    ["Jump 351","set program counter to 351"],
    ["DelVar $n281","delete method variable $n281"],
    ["DelVar $s284","delete method variable $s284"],
    ["DelVar d","delete method variable d"],
    ["DelVar n","delete method variable n"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Push ()","push constant ()"],
    ["Store bag","pop a value and store it in shared variable bag"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame empty ()","start of method empty"],
    ["DelVar result","delete method variable result"],
    ["Push ()","push constant ()"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame fromSet s","start of method fromSet"],
    ["DelVar result","delete method variable result"],
    ["Push ()","push constant ()"],
    ["LoadVar s","push the value of s"],
    ["DelVar s","delete method variable s"],
    ["StoreVar $s313","pop a value and store in $s313"],
    ["LoadVar $s313","push the value of $s313"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 395","pop a value and jump to 395 if the value is True"],
    ["Cut($s313, elt)","remove smallest element from $s313 and assign to elt"],
    ["LoadVar elt","push the value of elt"],
    ["DelVar elt","delete method variable elt"],
    ["Push 1","push constant 1"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Jump 386","set program counter to 386"],
    ["DelVar $s313","delete method variable $s313"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame fromList a","start of method fromList"],
    ["DelVar result","delete method variable result"],
    ["Push ()","push constant ()"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar a","push the value of a"],
    ["DelVar a","delete method variable a"],
    ["StoreVar $s329","pop a value and store in $s329"],
    ["LoadVar $s329","push the value of $s329"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 432","pop a value and jump to 432 if the value is True"],
    ["Cut($s329, v)","remove smallest element from $s329 and assign to v"],
    ["LoadVar v","push the value of v"],
    ["LoadVar result","push the value of result"],
    ["1-ary keys","pop 1 value and push the result of applying keys"],
    ["2-ary in","pop 2 values and push the result of applying in"],
    ["JumpCond False 425","pop a value and jump to 425 if the value is False"],
    ["Push ?result","push constant ?result"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["LoadVar [result]","pop the address of a method variable and push the value of that variable"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["StoreVar [result]","pop a value and the address of a method variable and store the value at that address"],
    ["Jump 406","set program counter to 406"],
    ["Push ?result","push constant ?result"],
    ["LoadVar v","push the value of v"],
    ["DelVar v","delete method variable v"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push 1","push constant 1"],
    ["StoreVar [result]","pop a value and the address of a method variable and store the value at that address"],
    ["Jump 406","set program counter to 406"],
    ["DelVar $s329","delete method variable $s329"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame multiplicity (bg, elt)","start of method multiplicity"],
    ["DelVar result","delete method variable result"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Push 0","push constant 0"],
    ["LoadVar bg","push the value of bg"],
    ["2-ary in","pop 2 values and push the result of applying in"],
    ["1-ary not","pop 1 value and push the result of applying not"],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["LoadVar elt","push the value of elt"],
    ["LoadVar bg","push the value of bg"],
    ["1-ary keys","pop 1 value and push the result of applying keys"],
    ["2-ary in","pop 2 values and push the result of applying in"],
    ["JumpCond False 458","pop a value and jump to 458 if the value is False"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["LoadVar elt","push the value of elt"],
    ["DelVar elt","delete method variable elt"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 462","set program counter to 462"],
    ["DelVar bg","delete method variable bg"],
    ["DelVar elt","delete method variable elt"],
    ["Push 0","push constant 0"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame size bg","start of method size"],
    ["DelVar result","delete method variable result"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Push 0","push constant 0"],
    ["LoadVar bg","push the value of bg"],
    ["2-ary in","pop 2 values and push the result of applying in"],
    ["1-ary not","pop 1 value and push the result of applying not"],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["Push 0","push constant 0"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["StoreVar $s393","pop a value and store in $s393"],
    ["LoadVar $s393","push the value of $s393"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 491","pop a value and jump to 491 if the value is True"],
    ["Cut($s393, c)","remove smallest element from $s393 and assign to c"],
    ["LoadVar result","push the value of result"],
    ["DelVar result","delete method variable result"],
    ["LoadVar c","push the value of c"],
    ["DelVar c","delete method variable c"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 480","set program counter to 480"],
    ["DelVar $s393","delete method variable $s393"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame bmin bg","start of method bmin"],
    ["DelVar result","delete method variable result"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Push 0","push constant 0"],
    ["LoadVar bg","push the value of bg"],
    ["2-ary in","pop 2 values and push the result of applying in"],
    ["1-ary not","pop 1 value and push the result of applying not"],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["1-ary keys","pop 1 value and push the result of applying keys"],
    ["1-ary min","pop 1 value and push the result of applying min"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame bmax bg","start of method bmax"],
    ["DelVar result","delete method variable result"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["1-ary keys","pop 1 value and push the result of applying keys"],
    ["1-ary max","pop 1 value and push the result of applying max"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame bchoose bg","start of method bchoose"],
    ["DelVar result","delete method variable result"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Push 0","push constant 0"],
    ["LoadVar bg","push the value of bg"],
    ["2-ary in","pop 2 values and push the result of applying in"],
    ["1-ary not","pop 1 value and push the result of applying not"],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["1-ary keys","pop 1 value and push the result of applying keys"],
    ["Choose","pop a set value and push one of its elements"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame add (bg, elt)","start of method add"],
    ["DelVar result","delete method variable result"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Push 0","push constant 0"],
    ["LoadVar bg","push the value of bg"],
    ["2-ary in","pop 2 values and push the result of applying in"],
    ["1-ary not","pop 1 value and push the result of applying not"],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar elt","push the value of elt"],
    ["LoadVar result","push the value of result"],
    ["1-ary keys","pop 1 value and push the result of applying keys"],
    ["2-ary in","pop 2 values and push the result of applying in"],
    ["JumpCond False 568","pop a value and jump to 568 if the value is False"],
    ["Push ?result","push constant ?result"],
    ["LoadVar elt","push the value of elt"],
    ["DelVar elt","delete method variable elt"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["LoadVar [result]","pop the address of a method variable and push the value of that variable"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["StoreVar [result]","pop a value and the address of a method variable and store the value at that address"],
    ["Jump 574","set program counter to 574"],
    ["Push ?result","push constant ?result"],
    ["LoadVar elt","push the value of elt"],
    ["DelVar elt","delete method variable elt"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push 1","push constant 1"],
    ["StoreVar [result]","pop a value and the address of a method variable and store the value at that address"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame remove (bg, elt)","start of method remove"],
    ["DelVar result","delete method variable result"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Push 0","push constant 0"],
    ["LoadVar bg","push the value of bg"],
    ["2-ary in","pop 2 values and push the result of applying in"],
    ["1-ary not","pop 1 value and push the result of applying not"],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar elt","push the value of elt"],
    ["LoadVar result","push the value of result"],
    ["1-ary keys","pop 1 value and push the result of applying keys"],
    ["2-ary in","pop 2 values and push the result of applying in"],
    ["JumpCond False 601","pop a value and jump to 601 if the value is False"],
    ["LoadVar result","push the value of result"],
    ["LoadVar elt","push the value of elt"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Push 0","push constant 0"],
    ["2-ary >","pop 2 values and push the result of applying >"],
    ["Jump 602","set program counter to 602"],
    ["Push False","push constant False"],
    ["JumpCond False 611","pop a value and jump to 611 if the value is False"],
    ["Push ?result","push constant ?result"],
    ["LoadVar elt","push the value of elt"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["LoadVar [result]","pop the address of a method variable and push the value of that variable"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["StoreVar [result]","pop a value and the address of a method variable and store the value at that address"],
    ["LoadVar result","push the value of result"],
    ["LoadVar elt","push the value of elt"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Push 0","push constant 0"],
    ["2-ary <=","pop 2 values and push the result of applying <="],
    ["JumpCond False 622","pop a value and jump to 622 if the value is False"],
    ["Push ?result","push constant ?result"],
    ["LoadVar elt","push the value of elt"],
    ["DelVar elt","delete method variable elt"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["DelVar [result]","pop an address of a method variable and delete that variable"],
    ["DelVar elt","delete method variable elt"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame combinations (bg, k)","start of method combinations"],
    ["DelVar result","delete method variable result"],
    ["LoadVar k","push the value of k"],
    ["Push 0","push constant 0"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond False 640","pop a value and jump to 640 if the value is False"],
    ["DelVar bg","delete method variable bg"],
    ["DelVar k","delete method variable k"],
    ["Push {}","push constant {}"],
    ["Push PC(374)","push constant PC(374)"],
    ["Push ()","push constant ()"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 725","set program counter to 725"],
    ["Push PC(464)","push constant PC(464)"],
    ["LoadVar bg","push the value of bg"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar n","pop a value and store in n"],
    ["LoadVar k","push the value of k"],
    ["LoadVar n","push the value of n"],
    ["2-ary >","pop 2 values and push the result of applying >"],
    ["JumpCond False 654","pop a value and jump to 654 if the value is False"],
    ["DelVar bg","delete method variable bg"],
    ["DelVar k","delete method variable k"],
    ["DelVar n","delete method variable n"],
    ["Push {}","push constant {}"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 725","set program counter to 725"],
    ["LoadVar k","push the value of k"],
    ["LoadVar n","push the value of n"],
    ["DelVar n","delete method variable n"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond False 666","pop a value and jump to 666 if the value is False"],
    ["DelVar k","delete method variable k"],
    ["Push {}","push constant {}"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 725","set program counter to 725"],
    ["Push PC(494)","push constant PC(494)"],
    ["LoadVar bg","push the value of bg"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar hd","pop a value and store in hd"],
    ["Push PC(576)","push constant PC(576)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar bg","push the value of bg"],
    ["DelVar bg","delete method variable bg"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar hd","push the value of hd"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar tl","pop a value and store in tl"],
    ["Push {}","push constant {}"],
    ["Push PC(625)","push constant PC(625)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar tl","push the value of tl"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar k","push the value of k"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar $s570","pop a value and store in $s570"],
    ["LoadVar $s570","push the value of $s570"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 710","pop a value and jump to 710 if the value is True"],
    ["Cut($s570, x)","remove smallest element from $s570 and assign to x"],
    ["Push PC(539)","push constant PC(539)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar x","push the value of x"],
    ["DelVar x","delete method variable x"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar hd","push the value of hd"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["Jump 694","set program counter to 694"],
    ["DelVar $s570","delete method variable $s570"],
    ["DelVar hd","delete method variable hd"],
    ["Push PC(625)","push constant PC(625)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar tl","push the value of tl"],
    ["DelVar tl","delete method variable tl"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar k","push the value of k"],
    ["DelVar k","delete method variable k"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["2-ary |","pop 2 values and push the result of applying |"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame tas lk","start of method tas"],
    ["DelVar result","delete method variable result"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar lk","push the value of lk"],
    ["Load","pop an address and push the value at the address"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar lk","push the value of lk"],
    ["DelVar lk","delete method variable lk"],
    ["Push True","push constant True"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame cas (p, old, new)","start of method cas"],
    ["DelVar result","delete method variable result"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar p","push the value of p"],
    ["Load","pop an address and push the value at the address"],
    ["LoadVar old","push the value of old"],
    ["DelVar old","delete method variable old"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar result","push the value of result"],
    ["JumpCond False 756","pop a value and jump to 756 if the value is False"],
    ["LoadVar p","push the value of p"],
    ["DelVar p","delete method variable p"],
    ["LoadVar new","push the value of new"],
    ["DelVar new","delete method variable new"],
    ["Store","pop a value and an address and store the value at the address"],
    ["DelVar new","delete method variable new"],
    ["DelVar p","delete method variable p"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame BinSema acquired","start of method BinSema"],
    ["DelVar result","delete method variable result"],
    ["LoadVar acquired","push the value of acquired"],
    ["DelVar acquired","delete method variable acquired"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame Lock ()","start of method Lock"],
    ["DelVar result","delete method variable result"],
    ["Push PC(761)","push constant PC(761)"],
    ["Push False","push constant False"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame acquired binsema","start of method acquired"],
    ["DelVar result","delete method variable result"],
    ["LoadVar binsema","push the value of binsema"],
    ["DelVar binsema","delete method variable binsema"],
    ["Load","pop an address and push the value at the address"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame acquire binsema","start of method acquire"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["LoadVar binsema","push the value of binsema"],
    ["Load","pop an address and push the value at the address"],
    ["1-ary not","pop 1 value and push the result of applying not"],
    ["JumpCond False 792","pop a value and jump to 792 if the value is False"],
    ["Jump 795","set program counter to 795"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Jump 785","set program counter to 785"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["LoadVar binsema","push the value of binsema"],
    ["DelVar binsema","delete method variable binsema"],
    ["Push True","push constant True"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame release binsema","start of method release"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar binsema","push the value of binsema"],
    ["Load","pop an address and push the value at the address"],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar binsema","push the value of binsema"],
    ["DelVar binsema","delete method variable binsema"],
    ["Push False","push constant False"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame held binsema","start of method held"],
    ["DelVar result","delete method variable result"],
    ["LoadVar binsema","push the value of binsema"],
    ["DelVar binsema","delete method variable binsema"],
    ["Load","pop an address and push the value at the address"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame Condition ()","start of method Condition"],
    ["DelVar result","delete method variable result"],
    ["Push PC(374)","push constant PC(374)"],
    ["Push ()","push constant ()"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame wait (c, lk)","start of method wait"],
    ["Push 0","push constant 0"],
    ["StoreVar cnt","pop a value and store in cnt"],
    ["DelVar cnt","delete method variable cnt"],
    ["Push ()","push constant ()"],
    ["Save","pop a value and save context"],
    ["Continue","a no-op, must follow a Stop operation"],
    ["StoreVar ((), ctx)","pop a value and store in ((), ctx)"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Push PC(435)","push constant PC(435)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar c","push the value of c"],
    ["Load","pop an address and push the value at the address"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar ctx","push the value of ctx"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar cnt","pop a value and store in cnt"],
    ["LoadVar c","push the value of c"],
    ["Push PC(539)","push constant PC(539)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar c","push the value of c"],
    ["Load","pop an address and push the value at the address"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar ctx","push the value of ctx"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Store","pop a value and an address and store the value at the address"],
    ["LoadVar lk","push the value of lk"],
    ["Push False","push constant False"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["LoadVar lk","push the value of lk"],
    ["Load","pop an address and push the value at the address"],
    ["1-ary not","pop 1 value and push the result of applying not"],
    ["JumpCond False 890","pop a value and jump to 890 if the value is False"],
    ["Push PC(435)","push constant PC(435)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar c","push the value of c"],
    ["Load","pop an address and push the value at the address"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar ctx","push the value of ctx"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["LoadVar cnt","push the value of cnt"],
    ["2-ary <=","pop 2 values and push the result of applying <="],
    ["Jump 891","set program counter to 891"],
    ["Push False","push constant False"],
    ["JumpCond False 896","pop a value and jump to 896 if the value is False"],
    ["DelVar c","delete method variable c"],
    ["DelVar cnt","delete method variable cnt"],
    ["DelVar ctx","delete method variable ctx"],
    ["Jump 899","set program counter to 899"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Jump 871","set program counter to 871"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["LoadVar lk","push the value of lk"],
    ["DelVar lk","delete method variable lk"],
    ["Push True","push constant True"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame notify c","start of method notify"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar c","push the value of c"],
    ["Load","pop an address and push the value at the address"],
    ["Push PC(374)","push constant PC(374)"],
    ["Push ()","push constant ()"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["2-ary !=","pop 2 values and push the result of applying !="],
    ["JumpCond False 932","pop a value and jump to 932 if the value is False"],
    ["LoadVar c","push the value of c"],
    ["Push PC(576)","push constant PC(576)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar c","push the value of c"],
    ["Load","pop an address and push the value at the address"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["Push PC(521)","push constant PC(521)"],
    ["LoadVar c","push the value of c"],
    ["DelVar c","delete method variable c"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Store","pop a value and an address and store the value at the address"],
    ["DelVar c","delete method variable c"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame notifyAll c","start of method notifyAll"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar c","push the value of c"],
    ["DelVar c","delete method variable c"],
    ["Push PC(374)","push constant PC(374)"],
    ["Push ()","push constant ()"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame Semaphore cnt","start of method Semaphore"],
    ["DelVar result","delete method variable result"],
    ["LoadVar cnt","push the value of cnt"],
    ["DelVar cnt","delete method variable cnt"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame P sema","start of method P"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["LoadVar sema","push the value of sema"],
    ["Load","pop an address and push the value at the address"],
    ["Push 0","push constant 0"],
    ["2-ary >","pop 2 values and push the result of applying >"],
    ["JumpCond False 963","pop a value and jump to 963 if the value is False"],
    ["Jump 966","set program counter to 966"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Jump 955","set program counter to 955"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["LoadVar sema","push the value of sema"],
    ["DelVar sema","delete method variable sema"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame V sema","start of method V"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar sema","push the value of sema"],
    ["DelVar sema","delete method variable sema"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame Queue ()","start of method Queue"],
    ["DelVar result","delete method variable result"],
    ["Push ()","push constant ()"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame get q","start of method get"],
    ["DelVar result","delete method variable result"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["LoadVar q","push the value of q"],
    ["Load","pop an address and push the value at the address"],
    ["Push ()","push constant ()"],
    ["2-ary !=","pop 2 values and push the result of applying !="],
    ["JumpCond False 1005","pop a value and jump to 1005 if the value is False"],
    ["Jump 1008","set program counter to 1008"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Jump 996","set program counter to 996"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["Push PC(52)","push constant PC(52)"],
    ["LoadVar q","push the value of q"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["StoreVar result","pop a value and store in result"],
    ["LoadVar q","push the value of q"],
    ["Push PC(61)","push constant PC(61)"],
    ["LoadVar q","push the value of q"],
    ["DelVar q","delete method variable q"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame put (q, item)","start of method put"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["LoadVar q","push the value of q"],
    ["Push PC(39)","push constant PC(39)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar q","push the value of q"],
    ["DelVar q","delete method variable q"],
    ["Load","pop an address and push the value at the address"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar item","push the value of item"],
    ["DelVar item","delete method variable item"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Store","pop a value and an address and store the value at the address"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame Bank n","start of method Bank"],
    ["DelVar result","delete method variable result"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["Push ()","push constant ()"],
    ["Push \"balance\"","push constant \"balance\""],
    ["Push 0","push constant 0"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Push PC(768)","push constant PC(768)"],
    ["Push ()","push constant ()"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["LoadVar n","push the value of n"],
    ["DelVar n","delete method variable n"],
    ["2-ary *","pop 2 values and push the result of applying *"],
    ["StoreVar result","pop a value and store in result"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame inquiry (bank, acct)","start of method inquiry"],
    ["DelVar result","delete method variable result"],
    ["Push PC(784)","push constant PC(784)"],
    ["LoadVar bank","push the value of bank"],
    ["LoadVar acct","push the value of acct"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["LoadVar bank","push the value of bank"],
    ["LoadVar acct","push the value of acct"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"balance\"","push constant \"balance\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["StoreVar result","pop a value and store in result"],
    ["Push PC(803)","push constant PC(803)"],
    ["LoadVar bank","push the value of bank"],
    ["DelVar bank","delete method variable bank"],
    ["LoadVar acct","push the value of acct"],
    ["DelVar acct","delete method variable acct"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame deposit (bank, acct, amount)","start of method deposit"],
    ["DelVar result","delete method variable result"],
    ["Push PC(784)","push constant PC(784)"],
    ["LoadVar bank","push the value of bank"],
    ["LoadVar acct","push the value of acct"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["LoadVar bank","push the value of bank"],
    ["LoadVar acct","push the value of acct"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"balance\"","push constant \"balance\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["LoadVar amount","push the value of amount"],
    ["DelVar amount","delete method variable amount"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store","pop a value and an address and store the value at the address"],
    ["Push True","push constant True"],
    ["StoreVar result","pop a value and store in result"],
    ["Push PC(803)","push constant PC(803)"],
    ["LoadVar bank","push the value of bank"],
    ["DelVar bank","delete method variable bank"],
    ["LoadVar acct","push the value of acct"],
    ["DelVar acct","delete method variable acct"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame withdraw (bank, acct, amount)","start of method withdraw"],
    ["DelVar result","delete method variable result"],
    ["Push PC(784)","push constant PC(784)"],
    ["LoadVar bank","push the value of bank"],
    ["LoadVar acct","push the value of acct"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["LoadVar bank","push the value of bank"],
    ["LoadVar acct","push the value of acct"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"balance\"","push constant \"balance\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["LoadVar amount","push the value of amount"],
    ["2-ary <","pop 2 values and push the result of applying <"],
    ["JumpCond False 1155","pop a value and jump to 1155 if the value is False"],
    ["DelVar amount","delete method variable amount"],
    ["Push False","push constant False"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 1168","set program counter to 1168"],
    ["LoadVar bank","push the value of bank"],
    ["LoadVar acct","push the value of acct"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"balance\"","push constant \"balance\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["LoadVar amount","push the value of amount"],
    ["DelVar amount","delete method variable amount"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Store","pop a value and an address and store the value at the address"],
    ["Push True","push constant True"],
    ["StoreVar result","pop a value and store in result"],
    ["Push PC(803)","push constant PC(803)"],
    ["LoadVar bank","push the value of bank"],
    ["DelVar bank","delete method variable bank"],
    ["LoadVar acct","push the value of acct"],
    ["DelVar acct","delete method variable acct"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Return","restore caller method state and push result"],
    ["Jump 1298","set program counter to 1298"],
    ["Frame transfer (bank, acctFrom, acctTo, amount)","start of method transfer"],
    ["DelVar result","delete method variable result"],
    ["LoadVar acctFrom","push the value of acctFrom"],
    ["LoadVar acctTo","push the value of acctTo"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond False 1194","pop a value and jump to 1194 if the value is False"],
    ["DelVar acctFrom","delete method variable acctFrom"],
    ["DelVar acctTo","delete method variable acctTo"],
    ["DelVar amount","delete method variable amount"],
    ["DelVar bank","delete method variable bank"],
    ["Push False","push constant False"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 1297","set program counter to 1297"],
    ["Push PC(784)","push constant PC(784)"],
    ["LoadVar bank","push the value of bank"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar acctFrom","push the value of acctFrom"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar acctTo","push the value of acctTo"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["1-ary min","pop 1 value and push the result of applying min"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Push PC(784)","push constant PC(784)"],
    ["LoadVar bank","push the value of bank"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar acctFrom","push the value of acctFrom"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar acctTo","push the value of acctTo"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["1-ary max","pop 1 value and push the result of applying max"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["LoadVar bank","push the value of bank"],
    ["LoadVar acctFrom","push the value of acctFrom"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"balance\"","push constant \"balance\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["LoadVar amount","push the value of amount"],
    ["2-ary <","pop 2 values and push the result of applying <"],
    ["JumpCond False 1239","pop a value and jump to 1239 if the value is False"],
    ["DelVar amount","delete method variable amount"],
    ["Push False","push constant False"],
    ["StoreVar result","pop a value and store in result"],
    ["Jump 1262","set program counter to 1262"],
    ["LoadVar bank","push the value of bank"],
    ["LoadVar acctFrom","push the value of acctFrom"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"balance\"","push constant \"balance\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["LoadVar amount","push the value of amount"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Store","pop a value and an address and store the value at the address"],
    ["LoadVar bank","push the value of bank"],
    ["LoadVar acctTo","push the value of acctTo"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"balance\"","push constant \"balance\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Dup","push a copy of the top value on the stack"],
    ["Load","pop an address and push the value at the address"],
    ["LoadVar amount","push the value of amount"],
    ["DelVar amount","delete method variable amount"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store","pop a value and an address and store the value at the address"],
    ["Push True","push constant True"],
    ["StoreVar result","pop a value and store in result"],
    ["Push PC(803)","push constant PC(803)"],
    ["LoadVar bank","push the value of bank"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar acctFrom","push the value of acctFrom"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar acctTo","push the value of acctTo"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["1-ary max","pop 1 value and push the result of applying max"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Push PC(803)","push constant PC(803)"],
    ["LoadVar bank","push the value of bank"],
    ["DelVar bank","delete method variable bank"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar acctFrom","push the value of acctFrom"],
    ["DelVar acctFrom","delete method variable acctFrom"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar acctTo","push the value of acctTo"],
    ["DelVar acctTo","delete method variable acctTo"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["1-ary min","pop 1 value and push the result of applying min"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Push \"mutex\"","push constant \"mutex\""],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Pop","discard the top value on the stack"],
    ["Return","restore caller method state and push result"],
    ["Push PC(1043)","push constant PC(1043)"],
    ["Push [2, 2]","push constant [2, 2]"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Store b","pop a value and store it in shared variable b"],
    ["Jump 1454","set program counter to 1454"],
    ["Frame inq_test acc","start of method inq_test"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["Push \"call inquiry: \"","push constant \"call inquiry: \""],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["Load self","push value of shared variable self"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Print","pop a value and add to print history"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Push PC(1063)","push constant PC(1063)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["Push ?b","push constant ?b"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar acc","push the value of acc"],
    ["DelVar acc","delete method variable acc"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["Push \"done inquiry: \"","push constant \"done inquiry: \""],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["Load self","push value of shared variable self"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Print","pop a value and add to print history"],
    ["Return","restore caller method state and push result"],
    ["Jump 1454","set program counter to 1454"],
    ["Frame deposit_test (acc, amount)","start of method deposit_test"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["Push \"call deposit: \"","push constant \"call deposit: \""],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["Load self","push value of shared variable self"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Print","pop a value and add to print history"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Push PC(1063)","push constant PC(1063)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["Push ?b","push constant ?b"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar acc","push the value of acc"],
    ["DelVar acc","delete method variable acc"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 2","push constant 2"],
    ["LoadVar amount","push the value of amount"],
    ["DelVar amount","delete method variable amount"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["Push \"done deposit: \"","push constant \"done deposit: \""],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["Load self","push value of shared variable self"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Print","pop a value and add to print history"],
    ["Return","restore caller method state and push result"],
    ["Jump 1454","set program counter to 1454"],
    ["Frame withdraw_test (acc, amount)","start of method withdraw_test"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["Push \"call withdraw: \"","push constant \"call withdraw: \""],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["Load self","push value of shared variable self"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Print","pop a value and add to print history"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Push PC(1131)","push constant PC(1131)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["Push ?b","push constant ?b"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar acc","push the value of acc"],
    ["DelVar acc","delete method variable acc"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 2","push constant 2"],
    ["LoadVar amount","push the value of amount"],
    ["DelVar amount","delete method variable amount"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["Push \"done withdraw: \"","push constant \"done withdraw: \""],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["Load self","push value of shared variable self"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Print","pop a value and add to print history"],
    ["Return","restore caller method state and push result"],
    ["Jump 1454","set program counter to 1454"],
    ["Frame transfer_test (acctFrom, acctTo, amount)","start of method transfer_test"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["Push \"call transfer: \"","push constant \"call transfer: \""],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["Load self","push value of shared variable self"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Print","pop a value and add to print history"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Push PC(1181)","push constant PC(1181)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["Push ?b","push constant ?b"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar acctFrom","push the value of acctFrom"],
    ["DelVar acctFrom","delete method variable acctFrom"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 2","push constant 2"],
    ["LoadVar acctTo","push the value of acctTo"],
    ["DelVar acctTo","delete method variable acctTo"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 3","push constant 3"],
    ["LoadVar amount","push the value of amount"],
    ["DelVar amount","delete method variable amount"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Apply","pop a pc or dictionary f and an index i and push f(i)"],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["Push \"done transfer: \"","push constant \"done transfer: \""],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["Load self","push value of shared variable self"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Print","pop a value and add to print history"],
    ["Return","restore caller method state and push result"],
    ["Push { 1 }","push constant { 1 }"],
    ["StoreVar $s1270","pop a value and store in $s1270"],
    ["LoadVar $s1270","push the value of $s1270"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 1469","pop a value and jump to 1469 if the value is True"],
    ["Cut($s1270, i)","remove smallest element from $s1270 and assign to i"],
    ["Push { 1, 2, 3, 4, 5 }","push constant { 1, 2, 3, 4, 5 }"],
    ["Choose","pop a set value and push one of its elements"],
    ["Store amount","pop a value and store it in shared variable amount"],
    ["Push PC(1303)","push constant PC(1303)"],
    ["LoadVar i","push the value of i"],
    ["DelVar i","delete method variable i"],
    ["Push ()","push constant ()"],
    ["Spawn","pop thread-local state, argument, and pc and spawn a new thread"],
    ["Jump 1456","set program counter to 1456"],
    ["DelVar $s1270","delete method variable $s1270"],
    ["Push { 1, 2 }","push constant { 1, 2 }"],
    ["StoreVar $s1284","pop a value and store in $s1284"],
    ["LoadVar $s1284","push the value of $s1284"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 1491","pop a value and jump to 1491 if the value is True"],
    ["Cut($s1284, i)","remove smallest element from $s1284 and assign to i"],
    ["Push { 1, 2, 3, 4, 5 }","push constant { 1, 2, 3, 4, 5 }"],
    ["Choose","pop a set value and push one of its elements"],
    ["Store amount","pop a value and store it in shared variable amount"],
    ["Push PC(1337)","push constant PC(1337)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar i","push the value of i"],
    ["DelVar i","delete method variable i"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["Load amount","push value of shared variable amount"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push ()","push constant ()"],
    ["Spawn","pop thread-local state, argument, and pc and spawn a new thread"],
    ["Jump 1472","set program counter to 1472"],
    ["DelVar $s1284","delete method variable $s1284"],
    ["Push { 1 }","push constant { 1 }"],
    ["StoreVar $s1304","pop a value and store in $s1304"],
    ["LoadVar $s1304","push the value of $s1304"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 1513","pop a value and jump to 1513 if the value is True"],
    ["Cut($s1304, i)","remove smallest element from $s1304 and assign to i"],
    ["Push { 1, 2, 3, 4, 5 }","push constant { 1, 2, 3, 4, 5 }"],
    ["Choose","pop a set value and push one of its elements"],
    ["Store amount","pop a value and store it in shared variable amount"],
    ["Push PC(1375)","push constant PC(1375)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar i","push the value of i"],
    ["DelVar i","delete method variable i"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["Load amount","push value of shared variable amount"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push ()","push constant ()"],
    ["Spawn","pop thread-local state, argument, and pc and spawn a new thread"],
    ["Jump 1494","set program counter to 1494"],
    ["DelVar $s1304","delete method variable $s1304"],
    ["Push { 1, 2 }","push constant { 1, 2 }"],
    ["StoreVar $s1324","pop a value and store in $s1324"],
    ["LoadVar $s1324","push the value of $s1324"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 1547","pop a value and jump to 1547 if the value is True"],
    ["Cut($s1324, i)","remove smallest element from $s1324 and assign to i"],
    ["Push { 1, 2 }","push constant { 1, 2 }"],
    ["StoreVar $s1330","pop a value and store in $s1330"],
    ["LoadVar $s1330","push the value of $s1330"],
    ["1-ary IsEmpty","pop 1 value and push the result of applying IsEmpty"],
    ["JumpCond True 1544","pop a value and jump to 1544 if the value is True"],
    ["Cut($s1330, j)","remove smallest element from $s1330 and assign to j"],
    ["Push { 1, 2, 3, 4, 5 }","push constant { 1, 2, 3, 4, 5 }"],
    ["Choose","pop a set value and push one of its elements"],
    ["Store amount","pop a value and store it in shared variable amount"],
    ["Push PC(1413)","push constant PC(1413)"],
    ["Push ()","push constant ()"],
    ["Push 0","push constant 0"],
    ["LoadVar i","push the value of i"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 1","push constant 1"],
    ["LoadVar j","push the value of j"],
    ["DelVar j","delete method variable j"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push 2","push constant 2"],
    ["Load amount","push value of shared variable amount"],
    ["3-ary DictAdd","pop 3 values and push the result of applying DictAdd"],
    ["Push ()","push constant ()"],
    ["Spawn","pop thread-local state, argument, and pc and spawn a new thread"],
    ["Jump 1522","set program counter to 1522"],
    ["DelVar $s1330","delete method variable $s1330"],
    ["DelVar i","delete method variable i"],
    ["Jump 1516","set program counter to 1516"],
    ["DelVar $s1324","delete method variable $s1324"],
    ["Return","restore caller method state and push result"],
    ["DelVar result","delete method variable result"]
  ],
  "locations": {
    "7": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "2", "code": "def subseq(s, b, e):" },
    "8": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "2", "code": "def subseq(s, b, e):" },
    "9": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "10": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "11": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "12": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "13": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "14": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "15": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "16": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "17": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "18": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "19": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "20": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "21": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "22": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "23": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "24": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "25": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "26": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "27": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "28": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "29": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "30": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "31": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "32": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "33": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "34": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "35": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "36": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "37": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "3", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "38": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "5", "code": "def append(s, e):" },
    "39": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "5", "code": "def append(s, e):" },
    "40": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "6", "code": "    result = s + [e,]" },
    "41": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "6", "code": "    result = s + [e,]" },
    "42": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "6", "code": "    result = s + [e,]" },
    "43": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "6", "code": "    result = s + [e,]" },
    "44": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "6", "code": "    result = s + [e,]" },
    "45": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "6", "code": "    result = s + [e,]" },
    "46": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "6", "code": "    result = s + [e,]" },
    "47": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "6", "code": "    result = s + [e,]" },
    "48": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "6", "code": "    result = s + [e,]" },
    "49": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "6", "code": "    result = s + [e,]" },
    "50": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "6", "code": "    result = s + [e,]" },
    "51": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "8", "code": "def head(s):" },
    "52": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "8", "code": "def head(s):" },
    "53": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "9", "code": "    result = s[0]" },
    "54": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "9", "code": "    result = s[0]" },
    "55": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "9", "code": "    result = s[0]" },
    "56": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "9", "code": "    result = s[0]" },
    "57": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "9", "code": "    result = s[0]" },
    "58": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "9", "code": "    result = s[0]" },
    "59": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "9", "code": "    result = s[0]" },
    "60": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "11", "code": "def tail(s):" },
    "61": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "11", "code": "def tail(s):" },
    "62": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "63": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "64": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "65": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "66": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "67": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "68": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "69": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "70": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "71": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "72": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "73": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "74": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "75": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "76": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "77": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "78": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "12", "code": "    result = subseq(s, 1, len(s))" },
    "79": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "15", "code": "def sum(a):" },
    "80": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "15", "code": "def sum(a):" },
    "81": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "16", "code": "    result = 0" },
    "82": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "16", "code": "    result = 0" },
    "83": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "16", "code": "    result = 0" },
    "84": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "17", "code": "    for v in a:" },
    "85": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "17", "code": "    for v in a:" },
    "86": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "17", "code": "    for v in a:" },
    "87": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "17", "code": "    for v in a:" },
    "88": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "17", "code": "    for v in a:" },
    "89": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "17", "code": "    for v in a:" },
    "90": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "17", "code": "    for v in a:" },
    "91": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "18", "code": "        result += v" },
    "92": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "18", "code": "        result += v" },
    "93": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "18", "code": "        result += v" },
    "94": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "18", "code": "        result += v" },
    "95": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "18", "code": "        result += v" },
    "96": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "18", "code": "        result += v" },
    "97": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "18", "code": "        result += v" },
    "98": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "18", "code": "        result += v" },
    "99": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "18", "code": "        result += v" },
    "100": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "21", "code": "def set(a):" },
    "101": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "21", "code": "def set(a):" },
    "102": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "103": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "104": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "105": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "106": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "107": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "108": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "109": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "110": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "111": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "112": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "113": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "114": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "115": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "116": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "117": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "22", "code": "    result = { v for v in a }" },
    "118": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "25", "code": "def list(a):" },
    "119": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "25", "code": "def list(a):" },
    "120": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "121": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "122": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "123": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "124": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "125": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "126": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "127": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "128": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "129": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "130": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "131": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "132": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "133": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "134": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "135": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "136": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "137": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "138": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "139": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "140": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "26", "code": "    result = [ v for v in a ]" },
    "141": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "29", "code": "def values(d):" },
    "142": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "29", "code": "def values(d):" },
    "143": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "144": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "145": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "146": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "147": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "148": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "149": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "150": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "151": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "152": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "153": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "154": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "155": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "156": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "157": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "158": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "159": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "160": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "161": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "162": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "163": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "164": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "165": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "166": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "30", "code": "    result = [ d[k] for k in keys d ]" },
    "167": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "33", "code": "def items(d):" },
    "168": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "33", "code": "def items(d):" },
    "169": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "170": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "171": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "172": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "173": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "174": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "175": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "176": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "177": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "178": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "179": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "180": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "181": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "182": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "183": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "184": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "185": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "186": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "187": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "188": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "189": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "190": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "191": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "192": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "193": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "194": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "195": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "196": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "197": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "198": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "34", "code": "    result = [ (k, d[k]) for k in keys d ]" },
    "199": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "37", "code": "def enumerate(d):" },
    "200": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "37", "code": "def enumerate(d):" },
    "201": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "38", "code": "    var index = 0" },
    "202": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "38", "code": "    var index = 0" },
    "203": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "38", "code": "    var index = 0" },
    "204": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "39", "code": "    result = []" },
    "205": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "39", "code": "    result = []" },
    "206": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "40", "code": "    for k in keys d:" },
    "207": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "40", "code": "    for k in keys d:" },
    "208": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "40", "code": "    for k in keys d:" },
    "209": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "40", "code": "    for k in keys d:" },
    "210": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "40", "code": "    for k in keys d:" },
    "211": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "40", "code": "    for k in keys d:" },
    "212": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "40", "code": "    for k in keys d:" },
    "213": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "214": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "215": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "216": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "217": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "218": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "219": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "220": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "221": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "222": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "223": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "224": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "225": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "226": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "227": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "228": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "229": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "41", "code": "        result += [ (index, d[k]), ]" },
    "230": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "42", "code": "        index += 1" },
    "231": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "42", "code": "        index += 1" },
    "232": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "42", "code": "        index += 1" },
    "233": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "42", "code": "        index += 1" },
    "234": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "42", "code": "        index += 1" },
    "235": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "42", "code": "        index += 1" },
    "236": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "42", "code": "        index += 1" },
    "237": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "42", "code": "        index += 1" },
    "238": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "42", "code": "        index += 1" },
    "239": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "42", "code": "        index += 1" },
    "240": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "45", "code": "def qsort(a):" },
    "241": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "45", "code": "def qsort(a):" },
    "242": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "46", "code": "    if a == []:" },
    "243": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "46", "code": "    if a == []:" },
    "244": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "46", "code": "    if a == []:" },
    "245": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "46", "code": "    if a == []:" },
    "246": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "46", "code": "    if a == []:" },
    "247": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "47", "code": "        result = []" },
    "248": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "47", "code": "        result = []" },
    "249": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "47", "code": "        result = []" },
    "250": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "47", "code": "        result = []" },
    "251": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "252": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "253": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "254": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "255": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "256": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "257": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "258": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "259": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "260": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "261": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "262": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "263": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "264": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "265": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "266": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "267": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "268": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "269": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "270": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "271": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "272": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "273": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "274": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "275": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "276": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "277": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "278": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "279": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "280": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "281": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "282": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "283": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "284": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "285": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "286": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "287": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "288": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "289": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "290": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "291": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "292": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "293": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "294": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "295": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "296": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "297": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "298": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "299": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "300": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "301": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "302": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "303": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "304": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "305": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "306": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "307": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "308": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "309": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "310": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "49", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "311": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "312": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "313": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "314": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "315": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "316": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "317": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "318": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "319": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "320": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "321": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "322": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "323": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "324": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "325": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "326": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "327": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "55", "code": "def sorted(d):" },
    "328": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "55", "code": "def sorted(d):" },
    "329": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "56", "code": "    result = qsort(list(d))" },
    "330": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "56", "code": "    result = qsort(list(d))" },
    "331": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "56", "code": "    result = qsort(list(d))" },
    "332": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "56", "code": "    result = qsort(list(d))" },
    "333": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "56", "code": "    result = qsort(list(d))" },
    "334": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "56", "code": "    result = qsort(list(d))" },
    "335": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "56", "code": "    result = qsort(list(d))" },
    "336": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "56", "code": "    result = qsort(list(d))" },
    "337": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "56", "code": "    result = qsort(list(d))" },
    "338": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "59", "code": "def reversed(d):" },
    "339": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "59", "code": "def reversed(d):" },
    "340": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "60", "code": "    let n = len(d):" },
    "341": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "60", "code": "    let n = len(d):" },
    "342": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "60", "code": "    let n = len(d):" },
    "343": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "60", "code": "    let n = len(d):" },
    "344": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "345": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "346": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "347": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "348": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "349": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "350": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "351": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "352": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "353": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "354": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "355": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "356": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "357": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "358": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "359": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "360": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "361": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "362": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "363": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "364": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "365": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "366": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "367": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "368": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "369": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "370": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "371": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "372": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\list.hny", "line": "61", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "373": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "1", "code": "def empty():" },
    "374": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "1", "code": "def empty():" },
    "375": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "2", "code": "    result = []" },
    "376": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "2", "code": "    result = []" },
    "377": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "2", "code": "    result = []" },
    "378": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "2", "code": "    result = []" },
    "379": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "4", "code": "def fromSet(s):" },
    "380": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "4", "code": "def fromSet(s):" },
    "381": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "382": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "383": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "384": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "385": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "386": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "387": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "388": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "389": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "390": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "391": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "392": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "393": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "394": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "395": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "396": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "397": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "5", "code": "    result = { elt:1 for elt in s }" },
    "398": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "7", "code": "def fromList(a):" },
    "399": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "7", "code": "def fromList(a):" },
    "400": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "8", "code": "    result = []" },
    "401": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "8", "code": "    result = []" },
    "402": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "8", "code": "    result = []" },
    "403": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "9", "code": "    for v in a:" },
    "404": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "9", "code": "    for v in a:" },
    "405": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "9", "code": "    for v in a:" },
    "406": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "9", "code": "    for v in a:" },
    "407": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "9", "code": "    for v in a:" },
    "408": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "9", "code": "    for v in a:" },
    "409": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "9", "code": "    for v in a:" },
    "410": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "10", "code": "        if v in keys(result):" },
    "411": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "10", "code": "        if v in keys(result):" },
    "412": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "10", "code": "        if v in keys(result):" },
    "413": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "10", "code": "        if v in keys(result):" },
    "414": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "10", "code": "        if v in keys(result):" },
    "415": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "11", "code": "            result[v] += 1" },
    "416": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "11", "code": "            result[v] += 1" },
    "417": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "11", "code": "            result[v] += 1" },
    "418": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "11", "code": "            result[v] += 1" },
    "419": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "11", "code": "            result[v] += 1" },
    "420": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "11", "code": "            result[v] += 1" },
    "421": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "11", "code": "            result[v] += 1" },
    "422": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "11", "code": "            result[v] += 1" },
    "423": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "11", "code": "            result[v] += 1" },
    "424": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "11", "code": "            result[v] += 1" },
    "425": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "13", "code": "            result[v] = 1" },
    "426": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "13", "code": "            result[v] = 1" },
    "427": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "13", "code": "            result[v] = 1" },
    "428": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "13", "code": "            result[v] = 1" },
    "429": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "13", "code": "            result[v] = 1" },
    "430": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "13", "code": "            result[v] = 1" },
    "431": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "13", "code": "            result[v] = 1" },
    "432": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "13", "code": "            result[v] = 1" },
    "433": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "13", "code": "            result[v] = 1" },
    "434": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "15", "code": "def multiplicity(bg, elt):" },
    "435": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "15", "code": "def multiplicity(bg, elt):" },
    "436": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "16", "code": "    assert 0 not in bg" },
    "437": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "16", "code": "    assert 0 not in bg" },
    "438": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "16", "code": "    assert 0 not in bg" },
    "439": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "16", "code": "    assert 0 not in bg" },
    "440": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "16", "code": "    assert 0 not in bg" },
    "441": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "16", "code": "    assert 0 not in bg" },
    "442": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "16", "code": "    assert 0 not in bg" },
    "443": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "16", "code": "    assert 0 not in bg" },
    "444": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "16", "code": "    assert 0 not in bg" },
    "445": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "16", "code": "    assert 0 not in bg" },
    "446": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "17", "code": "    if elt in keys(bg):" },
    "447": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "17", "code": "    if elt in keys(bg):" },
    "448": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "17", "code": "    if elt in keys(bg):" },
    "449": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "17", "code": "    if elt in keys(bg):" },
    "450": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "17", "code": "    if elt in keys(bg):" },
    "451": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "18", "code": "        result = bg[elt]" },
    "452": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "18", "code": "        result = bg[elt]" },
    "453": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "18", "code": "        result = bg[elt]" },
    "454": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "18", "code": "        result = bg[elt]" },
    "455": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "18", "code": "        result = bg[elt]" },
    "456": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "18", "code": "        result = bg[elt]" },
    "457": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "18", "code": "        result = bg[elt]" },
    "458": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "20", "code": "        result = 0" },
    "459": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "20", "code": "        result = 0" },
    "460": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "20", "code": "        result = 0" },
    "461": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "20", "code": "        result = 0" },
    "462": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "20", "code": "        result = 0" },
    "463": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "22", "code": "def size(bg):" },
    "464": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "22", "code": "def size(bg):" },
    "465": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "23", "code": "    assert 0 not in bg" },
    "466": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "23", "code": "    assert 0 not in bg" },
    "467": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "23", "code": "    assert 0 not in bg" },
    "468": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "23", "code": "    assert 0 not in bg" },
    "469": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "23", "code": "    assert 0 not in bg" },
    "470": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "23", "code": "    assert 0 not in bg" },
    "471": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "23", "code": "    assert 0 not in bg" },
    "472": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "23", "code": "    assert 0 not in bg" },
    "473": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "23", "code": "    assert 0 not in bg" },
    "474": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "23", "code": "    assert 0 not in bg" },
    "475": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "24", "code": "    result = 0" },
    "476": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "24", "code": "    result = 0" },
    "477": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "25", "code": "    for c in bg:" },
    "478": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "25", "code": "    for c in bg:" },
    "479": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "25", "code": "    for c in bg:" },
    "480": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "25", "code": "    for c in bg:" },
    "481": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "25", "code": "    for c in bg:" },
    "482": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "25", "code": "    for c in bg:" },
    "483": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "25", "code": "    for c in bg:" },
    "484": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "26", "code": "        result += c" },
    "485": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "26", "code": "        result += c" },
    "486": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "26", "code": "        result += c" },
    "487": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "26", "code": "        result += c" },
    "488": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "26", "code": "        result += c" },
    "489": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "26", "code": "        result += c" },
    "490": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "26", "code": "        result += c" },
    "491": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "26", "code": "        result += c" },
    "492": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "26", "code": "        result += c" },
    "493": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "28", "code": "def bmin(bg):" },
    "494": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "28", "code": "def bmin(bg):" },
    "495": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "29", "code": "    assert 0 not in bg" },
    "496": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "29", "code": "    assert 0 not in bg" },
    "497": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "29", "code": "    assert 0 not in bg" },
    "498": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "29", "code": "    assert 0 not in bg" },
    "499": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "29", "code": "    assert 0 not in bg" },
    "500": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "29", "code": "    assert 0 not in bg" },
    "501": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "29", "code": "    assert 0 not in bg" },
    "502": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "29", "code": "    assert 0 not in bg" },
    "503": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "29", "code": "    assert 0 not in bg" },
    "504": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "29", "code": "    assert 0 not in bg" },
    "505": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "30", "code": "    result = min(keys(bg))" },
    "506": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "30", "code": "    result = min(keys(bg))" },
    "507": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "30", "code": "    result = min(keys(bg))" },
    "508": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "30", "code": "    result = min(keys(bg))" },
    "509": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "30", "code": "    result = min(keys(bg))" },
    "510": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "30", "code": "    result = min(keys(bg))" },
    "511": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "32", "code": "def bmax(bg):" },
    "512": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "32", "code": "def bmax(bg):" },
    "513": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "33", "code": "    result = max(keys(bg))" },
    "514": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "33", "code": "    result = max(keys(bg))" },
    "515": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "33", "code": "    result = max(keys(bg))" },
    "516": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "33", "code": "    result = max(keys(bg))" },
    "517": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "33", "code": "    result = max(keys(bg))" },
    "518": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "33", "code": "    result = max(keys(bg))" },
    "519": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "33", "code": "    result = max(keys(bg))" },
    "520": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "35", "code": "def bchoose(bg):" },
    "521": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "35", "code": "def bchoose(bg):" },
    "522": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "36", "code": "    assert 0 not in bg" },
    "523": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "36", "code": "    assert 0 not in bg" },
    "524": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "36", "code": "    assert 0 not in bg" },
    "525": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "36", "code": "    assert 0 not in bg" },
    "526": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "36", "code": "    assert 0 not in bg" },
    "527": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "36", "code": "    assert 0 not in bg" },
    "528": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "36", "code": "    assert 0 not in bg" },
    "529": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "36", "code": "    assert 0 not in bg" },
    "530": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "36", "code": "    assert 0 not in bg" },
    "531": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "36", "code": "    assert 0 not in bg" },
    "532": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "37", "code": "    result = choose(keys(bg))" },
    "533": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "37", "code": "    result = choose(keys(bg))" },
    "534": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "37", "code": "    result = choose(keys(bg))" },
    "535": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "37", "code": "    result = choose(keys(bg))" },
    "536": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "37", "code": "    result = choose(keys(bg))" },
    "537": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "37", "code": "    result = choose(keys(bg))" },
    "538": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "39", "code": "def add(bg, elt):" },
    "539": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "39", "code": "def add(bg, elt):" },
    "540": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "40", "code": "    assert 0 not in bg" },
    "541": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "40", "code": "    assert 0 not in bg" },
    "542": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "40", "code": "    assert 0 not in bg" },
    "543": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "40", "code": "    assert 0 not in bg" },
    "544": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "40", "code": "    assert 0 not in bg" },
    "545": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "40", "code": "    assert 0 not in bg" },
    "546": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "40", "code": "    assert 0 not in bg" },
    "547": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "40", "code": "    assert 0 not in bg" },
    "548": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "40", "code": "    assert 0 not in bg" },
    "549": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "40", "code": "    assert 0 not in bg" },
    "550": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "41", "code": "    result = bg" },
    "551": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "41", "code": "    result = bg" },
    "552": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "41", "code": "    result = bg" },
    "553": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "42", "code": "    if elt in keys(result):" },
    "554": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "42", "code": "    if elt in keys(result):" },
    "555": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "42", "code": "    if elt in keys(result):" },
    "556": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "42", "code": "    if elt in keys(result):" },
    "557": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "42", "code": "    if elt in keys(result):" },
    "558": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "43", "code": "        result[elt] += 1" },
    "559": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "43", "code": "        result[elt] += 1" },
    "560": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "43", "code": "        result[elt] += 1" },
    "561": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "43", "code": "        result[elt] += 1" },
    "562": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "43", "code": "        result[elt] += 1" },
    "563": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "43", "code": "        result[elt] += 1" },
    "564": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "43", "code": "        result[elt] += 1" },
    "565": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "43", "code": "        result[elt] += 1" },
    "566": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "43", "code": "        result[elt] += 1" },
    "567": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "43", "code": "        result[elt] += 1" },
    "568": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "45", "code": "        result[elt] = 1" },
    "569": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "45", "code": "        result[elt] = 1" },
    "570": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "45", "code": "        result[elt] = 1" },
    "571": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "45", "code": "        result[elt] = 1" },
    "572": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "45", "code": "        result[elt] = 1" },
    "573": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "45", "code": "        result[elt] = 1" },
    "574": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "45", "code": "        result[elt] = 1" },
    "575": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "47", "code": "def remove(bg, elt):" },
    "576": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "47", "code": "def remove(bg, elt):" },
    "577": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "48", "code": "    assert 0 not in bg" },
    "578": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "48", "code": "    assert 0 not in bg" },
    "579": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "48", "code": "    assert 0 not in bg" },
    "580": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "48", "code": "    assert 0 not in bg" },
    "581": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "48", "code": "    assert 0 not in bg" },
    "582": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "48", "code": "    assert 0 not in bg" },
    "583": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "48", "code": "    assert 0 not in bg" },
    "584": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "48", "code": "    assert 0 not in bg" },
    "585": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "48", "code": "    assert 0 not in bg" },
    "586": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "48", "code": "    assert 0 not in bg" },
    "587": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "49", "code": "    result = bg" },
    "588": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "49", "code": "    result = bg" },
    "589": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "49", "code": "    result = bg" },
    "590": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "50", "code": "    if (elt in keys(result)) and (result[elt] > 0):" },
    "591": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "50", "code": "    if (elt in keys(result)) and (result[elt] > 0):" },
    "592": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "50", "code": "    if (elt in keys(result)) and (result[elt] > 0):" },
    "593": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "50", "code": "    if (elt in keys(result)) and (result[elt] > 0):" },
    "594": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "50", "code": "    if (elt in keys(result)) and (result[elt] > 0):" },
    "595": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "50", "code": "    if (elt in keys(result)) and (result[elt] > 0):" },
    "596": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "50", "code": "    if (elt in keys(result)) and (result[elt] > 0):" },
    "597": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "50", "code": "    if (elt in keys(result)) and (result[elt] > 0):" },
    "598": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "50", "code": "    if (elt in keys(result)) and (result[elt] > 0):" },
    "599": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "50", "code": "    if (elt in keys(result)) and (result[elt] > 0):" },
    "600": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "50", "code": "    if (elt in keys(result)) and (result[elt] > 0):" },
    "601": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "50", "code": "    if (elt in keys(result)) and (result[elt] > 0):" },
    "602": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "50", "code": "    if (elt in keys(result)) and (result[elt] > 0):" },
    "603": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "51", "code": "        result[elt] -= 1" },
    "604": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "51", "code": "        result[elt] -= 1" },
    "605": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "51", "code": "        result[elt] -= 1" },
    "606": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "51", "code": "        result[elt] -= 1" },
    "607": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "51", "code": "        result[elt] -= 1" },
    "608": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "51", "code": "        result[elt] -= 1" },
    "609": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "51", "code": "        result[elt] -= 1" },
    "610": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "51", "code": "        result[elt] -= 1" },
    "611": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "52", "code": "    if result[elt] <= 0:" },
    "612": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "52", "code": "    if result[elt] <= 0:" },
    "613": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "52", "code": "    if result[elt] <= 0:" },
    "614": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "52", "code": "    if result[elt] <= 0:" },
    "615": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "52", "code": "    if result[elt] <= 0:" },
    "616": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "52", "code": "    if result[elt] <= 0:" },
    "617": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "53", "code": "        del result[elt]" },
    "618": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "53", "code": "        del result[elt]" },
    "619": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "53", "code": "        del result[elt]" },
    "620": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "53", "code": "        del result[elt]" },
    "621": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "53", "code": "        del result[elt]" },
    "622": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "53", "code": "        del result[elt]" },
    "623": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "53", "code": "        del result[elt]" },
    "624": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "56", "code": "def combinations(bg, k):" },
    "625": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "56", "code": "def combinations(bg, k):" },
    "626": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "57", "code": "    if k == 0:" },
    "627": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "57", "code": "    if k == 0:" },
    "628": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "57", "code": "    if k == 0:" },
    "629": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "57", "code": "    if k == 0:" },
    "630": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "57", "code": "    if k == 0:" },
    "631": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "58", "code": "        result = { empty() }" },
    "632": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "58", "code": "        result = { empty() }" },
    "633": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "58", "code": "        result = { empty() }" },
    "634": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "58", "code": "        result = { empty() }" },
    "635": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "58", "code": "        result = { empty() }" },
    "636": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "58", "code": "        result = { empty() }" },
    "637": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "58", "code": "        result = { empty() }" },
    "638": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "58", "code": "        result = { empty() }" },
    "639": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "58", "code": "        result = { empty() }" },
    "640": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "60", "code": "        let n = size(bg):" },
    "641": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "60", "code": "        let n = size(bg):" },
    "642": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "60", "code": "        let n = size(bg):" },
    "643": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "60", "code": "        let n = size(bg):" },
    "644": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "61", "code": "            if k > n:" },
    "645": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "61", "code": "            if k > n:" },
    "646": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "61", "code": "            if k > n:" },
    "647": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "61", "code": "            if k > n:" },
    "648": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "62", "code": "                result = {}" },
    "649": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "62", "code": "                result = {}" },
    "650": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "62", "code": "                result = {}" },
    "651": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "62", "code": "                result = {}" },
    "652": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "62", "code": "                result = {}" },
    "653": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "62", "code": "                result = {}" },
    "654": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "63", "code": "            elif k == n:" },
    "655": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "63", "code": "            elif k == n:" },
    "656": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "63", "code": "            elif k == n:" },
    "657": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "63", "code": "            elif k == n:" },
    "658": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "63", "code": "            elif k == n:" },
    "659": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "64", "code": "                result = { bg }" },
    "660": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "64", "code": "                result = { bg }" },
    "661": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "64", "code": "                result = { bg }" },
    "662": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "64", "code": "                result = { bg }" },
    "663": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "64", "code": "                result = { bg }" },
    "664": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "64", "code": "                result = { bg }" },
    "665": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "64", "code": "                result = { bg }" },
    "666": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "66", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "667": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "66", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "668": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "66", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "669": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "66", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "670": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "66", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "671": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "66", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "672": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "66", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "673": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "66", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "674": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "66", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "675": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "66", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "676": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "66", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "677": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "66", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "678": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "66", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "679": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "66", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "680": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "66", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "681": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "682": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "683": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "684": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "685": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "686": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "687": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "688": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "689": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "690": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "691": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "692": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "693": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "694": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "695": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "696": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "697": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "698": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "699": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "700": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "701": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "702": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "703": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "704": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "705": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "706": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "707": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "708": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "709": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "710": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "711": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "712": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "713": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "714": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "715": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "716": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "717": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "718": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "719": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "720": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "721": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "722": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "723": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "724": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "725": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\bag.hny", "line": "67", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "726": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "4", "code": "def tas(lk):" },
    "727": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "4", "code": "def tas(lk):" },
    "728": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "5", "code": "    atomically:" },
    "729": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "5", "code": "    atomically:" },
    "730": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "6", "code": "        result = !lk" },
    "731": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "6", "code": "        result = !lk" },
    "732": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "6", "code": "        result = !lk" },
    "733": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "7", "code": "        !lk = True" },
    "734": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "7", "code": "        !lk = True" },
    "735": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "7", "code": "        !lk = True" },
    "736": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "7", "code": "        !lk = True" },
    "737": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "7", "code": "        !lk = True" },
    "738": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "7", "code": "        !lk = True" },
    "739": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "9", "code": "def cas(p, old, new):" },
    "740": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "9", "code": "def cas(p, old, new):" },
    "741": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "10", "code": "    atomically:" },
    "742": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "10", "code": "    atomically:" },
    "743": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "11", "code": "        result = !p == old" },
    "744": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "11", "code": "        result = !p == old" },
    "745": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "11", "code": "        result = !p == old" },
    "746": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "11", "code": "        result = !p == old" },
    "747": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "11", "code": "        result = !p == old" },
    "748": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "11", "code": "        result = !p == old" },
    "749": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "12", "code": "        if result:" },
    "750": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "12", "code": "        if result:" },
    "751": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "13", "code": "            !p = new" },
    "752": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "13", "code": "            !p = new" },
    "753": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "13", "code": "            !p = new" },
    "754": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "13", "code": "            !p = new" },
    "755": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "13", "code": "            !p = new" },
    "756": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "13", "code": "            !p = new" },
    "757": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "13", "code": "            !p = new" },
    "758": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "13", "code": "            !p = new" },
    "759": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "13", "code": "            !p = new" },
    "760": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "15", "code": "def BinSema(acquired):" },
    "761": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "15", "code": "def BinSema(acquired):" },
    "762": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "16", "code": "    result = acquired" },
    "763": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "16", "code": "    result = acquired" },
    "764": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "16", "code": "    result = acquired" },
    "765": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "16", "code": "    result = acquired" },
    "766": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "16", "code": "    result = acquired" },
    "767": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "18", "code": "def Lock():" },
    "768": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "18", "code": "def Lock():" },
    "769": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "19", "code": "    result = BinSema(False)" },
    "770": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "19", "code": "    result = BinSema(False)" },
    "771": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "19", "code": "    result = BinSema(False)" },
    "772": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "19", "code": "    result = BinSema(False)" },
    "773": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "19", "code": "    result = BinSema(False)" },
    "774": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "19", "code": "    result = BinSema(False)" },
    "775": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "21", "code": "def acquired(binsema):" },
    "776": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "21", "code": "def acquired(binsema):" },
    "777": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "22", "code": "    result = !binsema" },
    "778": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "22", "code": "    result = !binsema" },
    "779": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "22", "code": "    result = !binsema" },
    "780": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "22", "code": "    result = !binsema" },
    "781": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "22", "code": "    result = !binsema" },
    "782": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "22", "code": "    result = !binsema" },
    "783": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "24", "code": "def acquire(binsema):" },
    "784": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "24", "code": "def acquire(binsema):" },
    "785": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "25", "code": "    atomically when not !binsema:" },
    "786": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "25", "code": "    atomically when not !binsema:" },
    "787": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "25", "code": "    atomically when not !binsema:" },
    "788": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "25", "code": "    atomically when not !binsema:" },
    "789": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "25", "code": "    atomically when not !binsema:" },
    "790": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "25", "code": "    atomically when not !binsema:" },
    "791": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "25", "code": "    atomically when not !binsema:" },
    "792": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "25", "code": "    atomically when not !binsema:" },
    "793": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "25", "code": "    atomically when not !binsema:" },
    "794": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "25", "code": "    atomically when not !binsema:" },
    "795": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "25", "code": "    atomically when not !binsema:" },
    "796": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "26", "code": "        !binsema = True" },
    "797": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "26", "code": "        !binsema = True" },
    "798": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "26", "code": "        !binsema = True" },
    "799": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "26", "code": "        !binsema = True" },
    "800": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "26", "code": "        !binsema = True" },
    "801": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "26", "code": "        !binsema = True" },
    "802": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "28", "code": "def release(binsema):" },
    "803": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "28", "code": "def release(binsema):" },
    "804": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "29", "code": "    assert !binsema" },
    "805": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "29", "code": "    assert !binsema" },
    "806": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "29", "code": "    assert !binsema" },
    "807": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "29", "code": "    assert !binsema" },
    "808": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "29", "code": "    assert !binsema" },
    "809": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "29", "code": "    assert !binsema" },
    "810": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "29", "code": "    assert !binsema" },
    "811": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "30", "code": "    atomically !binsema = False" },
    "812": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "30", "code": "    atomically !binsema = False" },
    "813": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "30", "code": "    atomically !binsema = False" },
    "814": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "30", "code": "    atomically !binsema = False" },
    "815": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "30", "code": "    atomically !binsema = False" },
    "816": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "30", "code": "    atomically !binsema = False" },
    "817": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "30", "code": "    atomically !binsema = False" },
    "818": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "32", "code": "def held(binsema):" },
    "819": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "32", "code": "def held(binsema):" },
    "820": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "33", "code": "    result = !binsema" },
    "821": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "33", "code": "    result = !binsema" },
    "822": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "33", "code": "    result = !binsema" },
    "823": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "33", "code": "    result = !binsema" },
    "824": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "33", "code": "    result = !binsema" },
    "825": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "33", "code": "    result = !binsema" },
    "826": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "35", "code": "def Condition():" },
    "827": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "35", "code": "def Condition():" },
    "828": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "36", "code": "    result = bag.empty()" },
    "829": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "36", "code": "    result = bag.empty()" },
    "830": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "36", "code": "    result = bag.empty()" },
    "831": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "36", "code": "    result = bag.empty()" },
    "832": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "36", "code": "    result = bag.empty()" },
    "833": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "36", "code": "    result = bag.empty()" },
    "834": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "38", "code": "def wait(c, lk):" },
    "835": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "38", "code": "def wait(c, lk):" },
    "836": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "39", "code": "    var cnt = 0" },
    "837": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "39", "code": "    var cnt = 0" },
    "838": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "40", "code": "    let (), ctx = save():" },
    "839": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "40", "code": "    let (), ctx = save():" },
    "840": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "40", "code": "    let (), ctx = save():" },
    "841": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "40", "code": "    let (), ctx = save():" },
    "842": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "40", "code": "    let (), ctx = save():" },
    "843": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "41", "code": "        atomically:" },
    "844": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "42", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "845": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "42", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "846": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "42", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "847": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "42", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "848": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "42", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "849": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "42", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "850": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "42", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "851": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "42", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "852": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "42", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "853": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "42", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "854": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "42", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "855": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "43", "code": "            !c = bag.add(!c, ctx)" },
    "856": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "43", "code": "            !c = bag.add(!c, ctx)" },
    "857": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "43", "code": "            !c = bag.add(!c, ctx)" },
    "858": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "43", "code": "            !c = bag.add(!c, ctx)" },
    "859": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "43", "code": "            !c = bag.add(!c, ctx)" },
    "860": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "43", "code": "            !c = bag.add(!c, ctx)" },
    "861": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "43", "code": "            !c = bag.add(!c, ctx)" },
    "862": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "43", "code": "            !c = bag.add(!c, ctx)" },
    "863": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "43", "code": "            !c = bag.add(!c, ctx)" },
    "864": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "43", "code": "            !c = bag.add(!c, ctx)" },
    "865": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "43", "code": "            !c = bag.add(!c, ctx)" },
    "866": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "43", "code": "            !c = bag.add(!c, ctx)" },
    "867": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "44", "code": "            !lk = False" },
    "868": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "44", "code": "            !lk = False" },
    "869": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "44", "code": "            !lk = False" },
    "870": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "44", "code": "            !lk = False" },
    "871": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "872": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "873": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "874": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "875": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "876": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "877": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "878": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "879": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "880": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "881": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "882": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "883": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "884": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "885": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "886": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "887": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "888": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "889": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "890": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "891": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "892": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "893": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "894": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "895": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "896": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "897": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "898": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "899": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "45", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "900": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "46", "code": "            !lk = True" },
    "901": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "46", "code": "            !lk = True" },
    "902": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "46", "code": "            !lk = True" },
    "903": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "46", "code": "            !lk = True" },
    "904": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "46", "code": "            !lk = True" },
    "905": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "46", "code": "            !lk = True" },
    "906": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "48", "code": "def notify(c):" },
    "907": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "48", "code": "def notify(c):" },
    "908": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "49", "code": "    atomically if !c != bag.empty():" },
    "909": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "49", "code": "    atomically if !c != bag.empty():" },
    "910": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "49", "code": "    atomically if !c != bag.empty():" },
    "911": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "49", "code": "    atomically if !c != bag.empty():" },
    "912": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "49", "code": "    atomically if !c != bag.empty():" },
    "913": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "49", "code": "    atomically if !c != bag.empty():" },
    "914": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "49", "code": "    atomically if !c != bag.empty():" },
    "915": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "49", "code": "    atomically if !c != bag.empty():" },
    "916": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "917": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "918": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "919": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "920": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "921": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "922": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "923": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "924": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "925": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "926": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "927": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "928": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "929": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "930": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "931": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "932": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "933": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "934": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "50", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "935": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "52", "code": "def notifyAll(c):" },
    "936": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "52", "code": "def notifyAll(c):" },
    "937": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "53", "code": "    atomically !c = bag.empty()" },
    "938": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "53", "code": "    atomically !c = bag.empty()" },
    "939": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "53", "code": "    atomically !c = bag.empty()" },
    "940": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "53", "code": "    atomically !c = bag.empty()" },
    "941": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "53", "code": "    atomically !c = bag.empty()" },
    "942": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "53", "code": "    atomically !c = bag.empty()" },
    "943": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "53", "code": "    atomically !c = bag.empty()" },
    "944": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "53", "code": "    atomically !c = bag.empty()" },
    "945": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "53", "code": "    atomically !c = bag.empty()" },
    "946": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "55", "code": "def Semaphore(cnt):" },
    "947": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "55", "code": "def Semaphore(cnt):" },
    "948": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "56", "code": "    result = cnt" },
    "949": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "56", "code": "    result = cnt" },
    "950": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "56", "code": "    result = cnt" },
    "951": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "56", "code": "    result = cnt" },
    "952": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "56", "code": "    result = cnt" },
    "953": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "58", "code": "def P(sema):" },
    "954": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "58", "code": "def P(sema):" },
    "955": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "59", "code": "    atomically when !sema > 0:" },
    "956": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "59", "code": "    atomically when !sema > 0:" },
    "957": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "59", "code": "    atomically when !sema > 0:" },
    "958": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "59", "code": "    atomically when !sema > 0:" },
    "959": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "59", "code": "    atomically when !sema > 0:" },
    "960": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "59", "code": "    atomically when !sema > 0:" },
    "961": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "59", "code": "    atomically when !sema > 0:" },
    "962": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "59", "code": "    atomically when !sema > 0:" },
    "963": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "59", "code": "    atomically when !sema > 0:" },
    "964": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "59", "code": "    atomically when !sema > 0:" },
    "965": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "59", "code": "    atomically when !sema > 0:" },
    "966": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "59", "code": "    atomically when !sema > 0:" },
    "967": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "60", "code": "        !sema -= 1" },
    "968": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "60", "code": "        !sema -= 1" },
    "969": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "60", "code": "        !sema -= 1" },
    "970": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "60", "code": "        !sema -= 1" },
    "971": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "60", "code": "        !sema -= 1" },
    "972": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "60", "code": "        !sema -= 1" },
    "973": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "60", "code": "        !sema -= 1" },
    "974": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "60", "code": "        !sema -= 1" },
    "975": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "60", "code": "        !sema -= 1" },
    "976": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "62", "code": "def V(sema):" },
    "977": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "62", "code": "def V(sema):" },
    "978": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "63", "code": "    atomically !sema += 1" },
    "979": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "63", "code": "    atomically !sema += 1" },
    "980": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "63", "code": "    atomically !sema += 1" },
    "981": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "63", "code": "    atomically !sema += 1" },
    "982": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "63", "code": "    atomically !sema += 1" },
    "983": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "63", "code": "    atomically !sema += 1" },
    "984": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "63", "code": "    atomically !sema += 1" },
    "985": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "63", "code": "    atomically !sema += 1" },
    "986": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "63", "code": "    atomically !sema += 1" },
    "987": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "63", "code": "    atomically !sema += 1" },
    "988": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "65", "code": "def Queue():" },
    "989": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "65", "code": "def Queue():" },
    "990": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "66", "code": "    result = []" },
    "991": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "66", "code": "    result = []" },
    "992": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "66", "code": "    result = []" },
    "993": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "66", "code": "    result = []" },
    "994": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "68", "code": "def get(q):" },
    "995": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "68", "code": "def get(q):" },
    "996": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "69", "code": "    atomically when !q != []:" },
    "997": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "69", "code": "    atomically when !q != []:" },
    "998": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "69", "code": "    atomically when !q != []:" },
    "999": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "69", "code": "    atomically when !q != []:" },
    "1000": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "69", "code": "    atomically when !q != []:" },
    "1001": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "69", "code": "    atomically when !q != []:" },
    "1002": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "69", "code": "    atomically when !q != []:" },
    "1003": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "69", "code": "    atomically when !q != []:" },
    "1004": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "69", "code": "    atomically when !q != []:" },
    "1005": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "69", "code": "    atomically when !q != []:" },
    "1006": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "69", "code": "    atomically when !q != []:" },
    "1007": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "69", "code": "    atomically when !q != []:" },
    "1008": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "69", "code": "    atomically when !q != []:" },
    "1009": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "70", "code": "        result = list.head(!q)" },
    "1010": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "70", "code": "        result = list.head(!q)" },
    "1011": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "70", "code": "        result = list.head(!q)" },
    "1012": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "70", "code": "        result = list.head(!q)" },
    "1013": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "70", "code": "        result = list.head(!q)" },
    "1014": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "71", "code": "        !q = list.tail(!q)" },
    "1015": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "71", "code": "        !q = list.tail(!q)" },
    "1016": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "71", "code": "        !q = list.tail(!q)" },
    "1017": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "71", "code": "        !q = list.tail(!q)" },
    "1018": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "71", "code": "        !q = list.tail(!q)" },
    "1019": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "71", "code": "        !q = list.tail(!q)" },
    "1020": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "71", "code": "        !q = list.tail(!q)" },
    "1021": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "71", "code": "        !q = list.tail(!q)" },
    "1022": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "71", "code": "        !q = list.tail(!q)" },
    "1023": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "73", "code": "def put(q, item):" },
    "1024": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "73", "code": "def put(q, item):" },
    "1025": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1026": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1027": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1028": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1029": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1030": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1031": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1032": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1033": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1034": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1035": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1036": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1037": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1038": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1039": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1040": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1041": { "file": "c:\\programdata\\anaconda3\\lib\\site-packages\\harmony_model_checker\\modules\\synch.hny", "line": "74", "code": "    atomically !q = list.append(!q, item)" },
    "1042": { "file": "bankimpl.hny", "line": "3", "code": "def Bank(n):" },
    "1043": { "file": "bankimpl.hny", "line": "3", "code": "def Bank(n):" },
    "1044": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1045": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1046": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1047": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1048": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1049": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1050": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1051": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1052": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1053": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1054": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1055": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1056": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1057": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1058": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1059": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1060": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1061": { "file": "bankimpl.hny", "line": "4", "code": "    result = [ { .balance: 0, .mutex: Lock() }, ] * n" },
    "1062": { "file": "bankimpl.hny", "line": "6", "code": "def inquiry(bank, acct):" },
    "1063": { "file": "bankimpl.hny", "line": "6", "code": "def inquiry(bank, acct):" },
    "1064": { "file": "bankimpl.hny", "line": "7", "code": "    acquire((!bank)[acct].mutex)" },
    "1065": { "file": "bankimpl.hny", "line": "7", "code": "    acquire((!bank)[acct].mutex)" },
    "1066": { "file": "bankimpl.hny", "line": "7", "code": "    acquire((!bank)[acct].mutex)" },
    "1067": { "file": "bankimpl.hny", "line": "7", "code": "    acquire((!bank)[acct].mutex)" },
    "1068": { "file": "bankimpl.hny", "line": "7", "code": "    acquire((!bank)[acct].mutex)" },
    "1069": { "file": "bankimpl.hny", "line": "7", "code": "    acquire((!bank)[acct].mutex)" },
    "1070": { "file": "bankimpl.hny", "line": "7", "code": "    acquire((!bank)[acct].mutex)" },
    "1071": { "file": "bankimpl.hny", "line": "7", "code": "    acquire((!bank)[acct].mutex)" },
    "1072": { "file": "bankimpl.hny", "line": "7", "code": "    acquire((!bank)[acct].mutex)" },
    "1073": { "file": "bankimpl.hny", "line": "7", "code": "    acquire((!bank)[acct].mutex)" },
    "1074": { "file": "bankimpl.hny", "line": "8", "code": "    result = (!bank)[acct].balance" },
    "1075": { "file": "bankimpl.hny", "line": "8", "code": "    result = (!bank)[acct].balance" },
    "1076": { "file": "bankimpl.hny", "line": "8", "code": "    result = (!bank)[acct].balance" },
    "1077": { "file": "bankimpl.hny", "line": "8", "code": "    result = (!bank)[acct].balance" },
    "1078": { "file": "bankimpl.hny", "line": "8", "code": "    result = (!bank)[acct].balance" },
    "1079": { "file": "bankimpl.hny", "line": "8", "code": "    result = (!bank)[acct].balance" },
    "1080": { "file": "bankimpl.hny", "line": "8", "code": "    result = (!bank)[acct].balance" },
    "1081": { "file": "bankimpl.hny", "line": "9", "code": "    release((!bank)[acct].mutex) " },
    "1082": { "file": "bankimpl.hny", "line": "9", "code": "    release((!bank)[acct].mutex) " },
    "1083": { "file": "bankimpl.hny", "line": "9", "code": "    release((!bank)[acct].mutex) " },
    "1084": { "file": "bankimpl.hny", "line": "9", "code": "    release((!bank)[acct].mutex) " },
    "1085": { "file": "bankimpl.hny", "line": "9", "code": "    release((!bank)[acct].mutex) " },
    "1086": { "file": "bankimpl.hny", "line": "9", "code": "    release((!bank)[acct].mutex) " },
    "1087": { "file": "bankimpl.hny", "line": "9", "code": "    release((!bank)[acct].mutex) " },
    "1088": { "file": "bankimpl.hny", "line": "9", "code": "    release((!bank)[acct].mutex) " },
    "1089": { "file": "bankimpl.hny", "line": "9", "code": "    release((!bank)[acct].mutex) " },
    "1090": { "file": "bankimpl.hny", "line": "9", "code": "    release((!bank)[acct].mutex) " },
    "1091": { "file": "bankimpl.hny", "line": "9", "code": "    release((!bank)[acct].mutex) " },
    "1092": { "file": "bankimpl.hny", "line": "9", "code": "    release((!bank)[acct].mutex) " },
    "1093": { "file": "bankimpl.hny", "line": "11", "code": "def deposit(bank, acct, amount):" },
    "1094": { "file": "bankimpl.hny", "line": "11", "code": "def deposit(bank, acct, amount):" },
    "1095": { "file": "bankimpl.hny", "line": "12", "code": "    acquire((!bank)[acct].mutex)" },
    "1096": { "file": "bankimpl.hny", "line": "12", "code": "    acquire((!bank)[acct].mutex)" },
    "1097": { "file": "bankimpl.hny", "line": "12", "code": "    acquire((!bank)[acct].mutex)" },
    "1098": { "file": "bankimpl.hny", "line": "12", "code": "    acquire((!bank)[acct].mutex)" },
    "1099": { "file": "bankimpl.hny", "line": "12", "code": "    acquire((!bank)[acct].mutex)" },
    "1100": { "file": "bankimpl.hny", "line": "12", "code": "    acquire((!bank)[acct].mutex)" },
    "1101": { "file": "bankimpl.hny", "line": "12", "code": "    acquire((!bank)[acct].mutex)" },
    "1102": { "file": "bankimpl.hny", "line": "12", "code": "    acquire((!bank)[acct].mutex)" },
    "1103": { "file": "bankimpl.hny", "line": "12", "code": "    acquire((!bank)[acct].mutex)" },
    "1104": { "file": "bankimpl.hny", "line": "12", "code": "    acquire((!bank)[acct].mutex)" },
    "1105": { "file": "bankimpl.hny", "line": "13", "code": "    (!bank)[acct].balance += amount" },
    "1106": { "file": "bankimpl.hny", "line": "13", "code": "    (!bank)[acct].balance += amount" },
    "1107": { "file": "bankimpl.hny", "line": "13", "code": "    (!bank)[acct].balance += amount" },
    "1108": { "file": "bankimpl.hny", "line": "13", "code": "    (!bank)[acct].balance += amount" },
    "1109": { "file": "bankimpl.hny", "line": "13", "code": "    (!bank)[acct].balance += amount" },
    "1110": { "file": "bankimpl.hny", "line": "13", "code": "    (!bank)[acct].balance += amount" },
    "1111": { "file": "bankimpl.hny", "line": "13", "code": "    (!bank)[acct].balance += amount" },
    "1112": { "file": "bankimpl.hny", "line": "13", "code": "    (!bank)[acct].balance += amount" },
    "1113": { "file": "bankimpl.hny", "line": "13", "code": "    (!bank)[acct].balance += amount" },
    "1114": { "file": "bankimpl.hny", "line": "13", "code": "    (!bank)[acct].balance += amount" },
    "1115": { "file": "bankimpl.hny", "line": "13", "code": "    (!bank)[acct].balance += amount" },
    "1116": { "file": "bankimpl.hny", "line": "14", "code": "    result = True" },
    "1117": { "file": "bankimpl.hny", "line": "14", "code": "    result = True" },
    "1118": { "file": "bankimpl.hny", "line": "15", "code": "    release((!bank)[acct].mutex) " },
    "1119": { "file": "bankimpl.hny", "line": "15", "code": "    release((!bank)[acct].mutex) " },
    "1120": { "file": "bankimpl.hny", "line": "15", "code": "    release((!bank)[acct].mutex) " },
    "1121": { "file": "bankimpl.hny", "line": "15", "code": "    release((!bank)[acct].mutex) " },
    "1122": { "file": "bankimpl.hny", "line": "15", "code": "    release((!bank)[acct].mutex) " },
    "1123": { "file": "bankimpl.hny", "line": "15", "code": "    release((!bank)[acct].mutex) " },
    "1124": { "file": "bankimpl.hny", "line": "15", "code": "    release((!bank)[acct].mutex) " },
    "1125": { "file": "bankimpl.hny", "line": "15", "code": "    release((!bank)[acct].mutex) " },
    "1126": { "file": "bankimpl.hny", "line": "15", "code": "    release((!bank)[acct].mutex) " },
    "1127": { "file": "bankimpl.hny", "line": "15", "code": "    release((!bank)[acct].mutex) " },
    "1128": { "file": "bankimpl.hny", "line": "15", "code": "    release((!bank)[acct].mutex) " },
    "1129": { "file": "bankimpl.hny", "line": "15", "code": "    release((!bank)[acct].mutex) " },
    "1130": { "file": "bankimpl.hny", "line": "17", "code": "def withdraw(bank, acct, amount):" },
    "1131": { "file": "bankimpl.hny", "line": "17", "code": "def withdraw(bank, acct, amount):" },
    "1132": { "file": "bankimpl.hny", "line": "18", "code": "    acquire((!bank)[acct].mutex)" },
    "1133": { "file": "bankimpl.hny", "line": "18", "code": "    acquire((!bank)[acct].mutex)" },
    "1134": { "file": "bankimpl.hny", "line": "18", "code": "    acquire((!bank)[acct].mutex)" },
    "1135": { "file": "bankimpl.hny", "line": "18", "code": "    acquire((!bank)[acct].mutex)" },
    "1136": { "file": "bankimpl.hny", "line": "18", "code": "    acquire((!bank)[acct].mutex)" },
    "1137": { "file": "bankimpl.hny", "line": "18", "code": "    acquire((!bank)[acct].mutex)" },
    "1138": { "file": "bankimpl.hny", "line": "18", "code": "    acquire((!bank)[acct].mutex)" },
    "1139": { "file": "bankimpl.hny", "line": "18", "code": "    acquire((!bank)[acct].mutex)" },
    "1140": { "file": "bankimpl.hny", "line": "18", "code": "    acquire((!bank)[acct].mutex)" },
    "1141": { "file": "bankimpl.hny", "line": "18", "code": "    acquire((!bank)[acct].mutex)" },
    "1142": { "file": "bankimpl.hny", "line": "19", "code": "    if (!bank)[acct].balance < amount:" },
    "1143": { "file": "bankimpl.hny", "line": "19", "code": "    if (!bank)[acct].balance < amount:" },
    "1144": { "file": "bankimpl.hny", "line": "19", "code": "    if (!bank)[acct].balance < amount:" },
    "1145": { "file": "bankimpl.hny", "line": "19", "code": "    if (!bank)[acct].balance < amount:" },
    "1146": { "file": "bankimpl.hny", "line": "19", "code": "    if (!bank)[acct].balance < amount:" },
    "1147": { "file": "bankimpl.hny", "line": "19", "code": "    if (!bank)[acct].balance < amount:" },
    "1148": { "file": "bankimpl.hny", "line": "19", "code": "    if (!bank)[acct].balance < amount:" },
    "1149": { "file": "bankimpl.hny", "line": "19", "code": "    if (!bank)[acct].balance < amount:" },
    "1150": { "file": "bankimpl.hny", "line": "19", "code": "    if (!bank)[acct].balance < amount:" },
    "1151": { "file": "bankimpl.hny", "line": "20", "code": "        result = False" },
    "1152": { "file": "bankimpl.hny", "line": "20", "code": "        result = False" },
    "1153": { "file": "bankimpl.hny", "line": "20", "code": "        result = False" },
    "1154": { "file": "bankimpl.hny", "line": "20", "code": "        result = False" },
    "1155": { "file": "bankimpl.hny", "line": "22", "code": "        (!bank)[acct].balance -= amount" },
    "1156": { "file": "bankimpl.hny", "line": "22", "code": "        (!bank)[acct].balance -= amount" },
    "1157": { "file": "bankimpl.hny", "line": "22", "code": "        (!bank)[acct].balance -= amount" },
    "1158": { "file": "bankimpl.hny", "line": "22", "code": "        (!bank)[acct].balance -= amount" },
    "1159": { "file": "bankimpl.hny", "line": "22", "code": "        (!bank)[acct].balance -= amount" },
    "1160": { "file": "bankimpl.hny", "line": "22", "code": "        (!bank)[acct].balance -= amount" },
    "1161": { "file": "bankimpl.hny", "line": "22", "code": "        (!bank)[acct].balance -= amount" },
    "1162": { "file": "bankimpl.hny", "line": "22", "code": "        (!bank)[acct].balance -= amount" },
    "1163": { "file": "bankimpl.hny", "line": "22", "code": "        (!bank)[acct].balance -= amount" },
    "1164": { "file": "bankimpl.hny", "line": "22", "code": "        (!bank)[acct].balance -= amount" },
    "1165": { "file": "bankimpl.hny", "line": "22", "code": "        (!bank)[acct].balance -= amount" },
    "1166": { "file": "bankimpl.hny", "line": "23", "code": "        result = True" },
    "1167": { "file": "bankimpl.hny", "line": "23", "code": "        result = True" },
    "1168": { "file": "bankimpl.hny", "line": "24", "code": "    release((!bank)[acct].mutex) " },
    "1169": { "file": "bankimpl.hny", "line": "24", "code": "    release((!bank)[acct].mutex) " },
    "1170": { "file": "bankimpl.hny", "line": "24", "code": "    release((!bank)[acct].mutex) " },
    "1171": { "file": "bankimpl.hny", "line": "24", "code": "    release((!bank)[acct].mutex) " },
    "1172": { "file": "bankimpl.hny", "line": "24", "code": "    release((!bank)[acct].mutex) " },
    "1173": { "file": "bankimpl.hny", "line": "24", "code": "    release((!bank)[acct].mutex) " },
    "1174": { "file": "bankimpl.hny", "line": "24", "code": "    release((!bank)[acct].mutex) " },
    "1175": { "file": "bankimpl.hny", "line": "24", "code": "    release((!bank)[acct].mutex) " },
    "1176": { "file": "bankimpl.hny", "line": "24", "code": "    release((!bank)[acct].mutex) " },
    "1177": { "file": "bankimpl.hny", "line": "24", "code": "    release((!bank)[acct].mutex) " },
    "1178": { "file": "bankimpl.hny", "line": "24", "code": "    release((!bank)[acct].mutex) " },
    "1179": { "file": "bankimpl.hny", "line": "24", "code": "    release((!bank)[acct].mutex) " },
    "1180": { "file": "bankimpl.hny", "line": "26", "code": "def transfer(bank, acctFrom, acctTo, amount):" },
    "1181": { "file": "bankimpl.hny", "line": "26", "code": "def transfer(bank, acctFrom, acctTo, amount):" },
    "1182": { "file": "bankimpl.hny", "line": "27", "code": "    if acctFrom == acctTo:" },
    "1183": { "file": "bankimpl.hny", "line": "27", "code": "    if acctFrom == acctTo:" },
    "1184": { "file": "bankimpl.hny", "line": "27", "code": "    if acctFrom == acctTo:" },
    "1185": { "file": "bankimpl.hny", "line": "27", "code": "    if acctFrom == acctTo:" },
    "1186": { "file": "bankimpl.hny", "line": "27", "code": "    if acctFrom == acctTo:" },
    "1187": { "file": "bankimpl.hny", "line": "28", "code": "        result = False" },
    "1188": { "file": "bankimpl.hny", "line": "28", "code": "        result = False" },
    "1189": { "file": "bankimpl.hny", "line": "28", "code": "        result = False" },
    "1190": { "file": "bankimpl.hny", "line": "28", "code": "        result = False" },
    "1191": { "file": "bankimpl.hny", "line": "28", "code": "        result = False" },
    "1192": { "file": "bankimpl.hny", "line": "28", "code": "        result = False" },
    "1193": { "file": "bankimpl.hny", "line": "28", "code": "        result = False" },
    "1194": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1195": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1196": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1197": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1198": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1199": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1200": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1201": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1202": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1203": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1204": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1205": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1206": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1207": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1208": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1209": { "file": "bankimpl.hny", "line": "30", "code": "        acquire((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1210": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1211": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1212": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1213": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1214": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1215": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1216": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1217": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1218": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1219": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1220": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1221": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1222": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1223": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1224": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1225": { "file": "bankimpl.hny", "line": "31", "code": "        acquire((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1226": { "file": "bankimpl.hny", "line": "32", "code": "        if (!bank)[acctFrom].balance < amount:" },
    "1227": { "file": "bankimpl.hny", "line": "32", "code": "        if (!bank)[acctFrom].balance < amount:" },
    "1228": { "file": "bankimpl.hny", "line": "32", "code": "        if (!bank)[acctFrom].balance < amount:" },
    "1229": { "file": "bankimpl.hny", "line": "32", "code": "        if (!bank)[acctFrom].balance < amount:" },
    "1230": { "file": "bankimpl.hny", "line": "32", "code": "        if (!bank)[acctFrom].balance < amount:" },
    "1231": { "file": "bankimpl.hny", "line": "32", "code": "        if (!bank)[acctFrom].balance < amount:" },
    "1232": { "file": "bankimpl.hny", "line": "32", "code": "        if (!bank)[acctFrom].balance < amount:" },
    "1233": { "file": "bankimpl.hny", "line": "32", "code": "        if (!bank)[acctFrom].balance < amount:" },
    "1234": { "file": "bankimpl.hny", "line": "32", "code": "        if (!bank)[acctFrom].balance < amount:" },
    "1235": { "file": "bankimpl.hny", "line": "33", "code": "            result = False" },
    "1236": { "file": "bankimpl.hny", "line": "33", "code": "            result = False" },
    "1237": { "file": "bankimpl.hny", "line": "33", "code": "            result = False" },
    "1238": { "file": "bankimpl.hny", "line": "33", "code": "            result = False" },
    "1239": { "file": "bankimpl.hny", "line": "35", "code": "            (!bank)[acctFrom].balance -= amount" },
    "1240": { "file": "bankimpl.hny", "line": "35", "code": "            (!bank)[acctFrom].balance -= amount" },
    "1241": { "file": "bankimpl.hny", "line": "35", "code": "            (!bank)[acctFrom].balance -= amount" },
    "1242": { "file": "bankimpl.hny", "line": "35", "code": "            (!bank)[acctFrom].balance -= amount" },
    "1243": { "file": "bankimpl.hny", "line": "35", "code": "            (!bank)[acctFrom].balance -= amount" },
    "1244": { "file": "bankimpl.hny", "line": "35", "code": "            (!bank)[acctFrom].balance -= amount" },
    "1245": { "file": "bankimpl.hny", "line": "35", "code": "            (!bank)[acctFrom].balance -= amount" },
    "1246": { "file": "bankimpl.hny", "line": "35", "code": "            (!bank)[acctFrom].balance -= amount" },
    "1247": { "file": "bankimpl.hny", "line": "35", "code": "            (!bank)[acctFrom].balance -= amount" },
    "1248": { "file": "bankimpl.hny", "line": "35", "code": "            (!bank)[acctFrom].balance -= amount" },
    "1249": { "file": "bankimpl.hny", "line": "36", "code": "            (!bank)[acctTo].balance += amount" },
    "1250": { "file": "bankimpl.hny", "line": "36", "code": "            (!bank)[acctTo].balance += amount" },
    "1251": { "file": "bankimpl.hny", "line": "36", "code": "            (!bank)[acctTo].balance += amount" },
    "1252": { "file": "bankimpl.hny", "line": "36", "code": "            (!bank)[acctTo].balance += amount" },
    "1253": { "file": "bankimpl.hny", "line": "36", "code": "            (!bank)[acctTo].balance += amount" },
    "1254": { "file": "bankimpl.hny", "line": "36", "code": "            (!bank)[acctTo].balance += amount" },
    "1255": { "file": "bankimpl.hny", "line": "36", "code": "            (!bank)[acctTo].balance += amount" },
    "1256": { "file": "bankimpl.hny", "line": "36", "code": "            (!bank)[acctTo].balance += amount" },
    "1257": { "file": "bankimpl.hny", "line": "36", "code": "            (!bank)[acctTo].balance += amount" },
    "1258": { "file": "bankimpl.hny", "line": "36", "code": "            (!bank)[acctTo].balance += amount" },
    "1259": { "file": "bankimpl.hny", "line": "36", "code": "            (!bank)[acctTo].balance += amount" },
    "1260": { "file": "bankimpl.hny", "line": "37", "code": "            result = True" },
    "1261": { "file": "bankimpl.hny", "line": "37", "code": "            result = True" },
    "1262": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1263": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1264": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1265": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1266": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1267": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1268": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1269": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1270": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1271": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1272": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1273": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1274": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1275": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1276": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1277": { "file": "bankimpl.hny", "line": "38", "code": "        release((!bank)[max(acctFrom, acctTo)].mutex)" },
    "1278": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1279": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1280": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1281": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1282": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1283": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1284": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1285": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1286": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1287": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1288": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1289": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1290": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1291": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1292": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1293": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1294": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1295": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1296": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1297": { "file": "bankimpl.hny", "line": "39", "code": "        release((!bank)[min(acctFrom, acctTo)].mutex)" },
    "1298": { "file": "banktest.hny", "line": "8", "code": "b = bank.Bank((max(max(NINQ,NDEP),NWIT),NTRA))" },
    "1299": { "file": "banktest.hny", "line": "8", "code": "b = bank.Bank((max(max(NINQ,NDEP),NWIT),NTRA))" },
    "1300": { "file": "banktest.hny", "line": "8", "code": "b = bank.Bank((max(max(NINQ,NDEP),NWIT),NTRA))" },
    "1301": { "file": "banktest.hny", "line": "8", "code": "b = bank.Bank((max(max(NINQ,NDEP),NWIT),NTRA))" },
    "1302": { "file": "banktest.hny", "line": "10", "code": "def inq_test(acc):" },
    "1303": { "file": "banktest.hny", "line": "10", "code": "def inq_test(acc):" },
    "1304": { "file": "banktest.hny", "line": "11", "code": "    print(\"call inquiry: \", self)" },
    "1305": { "file": "banktest.hny", "line": "11", "code": "    print(\"call inquiry: \", self)" },
    "1306": { "file": "banktest.hny", "line": "11", "code": "    print(\"call inquiry: \", self)" },
    "1307": { "file": "banktest.hny", "line": "11", "code": "    print(\"call inquiry: \", self)" },
    "1308": { "file": "banktest.hny", "line": "11", "code": "    print(\"call inquiry: \", self)" },
    "1309": { "file": "banktest.hny", "line": "11", "code": "    print(\"call inquiry: \", self)" },
    "1310": { "file": "banktest.hny", "line": "11", "code": "    print(\"call inquiry: \", self)" },
    "1311": { "file": "banktest.hny", "line": "11", "code": "    print(\"call inquiry: \", self)" },
    "1312": { "file": "banktest.hny", "line": "12", "code": "    assert bank.inquiry(?b, acc)" },
    "1313": { "file": "banktest.hny", "line": "12", "code": "    assert bank.inquiry(?b, acc)" },
    "1314": { "file": "banktest.hny", "line": "12", "code": "    assert bank.inquiry(?b, acc)" },
    "1315": { "file": "banktest.hny", "line": "12", "code": "    assert bank.inquiry(?b, acc)" },
    "1316": { "file": "banktest.hny", "line": "12", "code": "    assert bank.inquiry(?b, acc)" },
    "1317": { "file": "banktest.hny", "line": "12", "code": "    assert bank.inquiry(?b, acc)" },
    "1318": { "file": "banktest.hny", "line": "12", "code": "    assert bank.inquiry(?b, acc)" },
    "1319": { "file": "banktest.hny", "line": "12", "code": "    assert bank.inquiry(?b, acc)" },
    "1320": { "file": "banktest.hny", "line": "12", "code": "    assert bank.inquiry(?b, acc)" },
    "1321": { "file": "banktest.hny", "line": "12", "code": "    assert bank.inquiry(?b, acc)" },
    "1322": { "file": "banktest.hny", "line": "12", "code": "    assert bank.inquiry(?b, acc)" },
    "1323": { "file": "banktest.hny", "line": "12", "code": "    assert bank.inquiry(?b, acc)" },
    "1324": { "file": "banktest.hny", "line": "12", "code": "    assert bank.inquiry(?b, acc)" },
    "1325": { "file": "banktest.hny", "line": "12", "code": "    assert bank.inquiry(?b, acc)" },
    "1326": { "file": "banktest.hny", "line": "12", "code": "    assert bank.inquiry(?b, acc)" },
    "1327": { "file": "banktest.hny", "line": "13", "code": "    print(\"done inquiry: \", self)" },
    "1328": { "file": "banktest.hny", "line": "13", "code": "    print(\"done inquiry: \", self)" },
    "1329": { "file": "banktest.hny", "line": "13", "code": "    print(\"done inquiry: \", self)" },
    "1330": { "file": "banktest.hny", "line": "13", "code": "    print(\"done inquiry: \", self)" },
    "1331": { "file": "banktest.hny", "line": "13", "code": "    print(\"done inquiry: \", self)" },
    "1332": { "file": "banktest.hny", "line": "13", "code": "    print(\"done inquiry: \", self)" },
    "1333": { "file": "banktest.hny", "line": "13", "code": "    print(\"done inquiry: \", self)" },
    "1334": { "file": "banktest.hny", "line": "13", "code": "    print(\"done inquiry: \", self)" },
    "1335": { "file": "banktest.hny", "line": "13", "code": "    print(\"done inquiry: \", self)" },
    "1336": { "file": "banktest.hny", "line": "15", "code": "def deposit_test(acc, amount):" },
    "1337": { "file": "banktest.hny", "line": "15", "code": "def deposit_test(acc, amount):" },
    "1338": { "file": "banktest.hny", "line": "16", "code": "    print(\"call deposit: \", self)" },
    "1339": { "file": "banktest.hny", "line": "16", "code": "    print(\"call deposit: \", self)" },
    "1340": { "file": "banktest.hny", "line": "16", "code": "    print(\"call deposit: \", self)" },
    "1341": { "file": "banktest.hny", "line": "16", "code": "    print(\"call deposit: \", self)" },
    "1342": { "file": "banktest.hny", "line": "16", "code": "    print(\"call deposit: \", self)" },
    "1343": { "file": "banktest.hny", "line": "16", "code": "    print(\"call deposit: \", self)" },
    "1344": { "file": "banktest.hny", "line": "16", "code": "    print(\"call deposit: \", self)" },
    "1345": { "file": "banktest.hny", "line": "16", "code": "    print(\"call deposit: \", self)" },
    "1346": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1347": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1348": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1349": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1350": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1351": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1352": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1353": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1354": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1355": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1356": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1357": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1358": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1359": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1360": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1361": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1362": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1363": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1364": { "file": "banktest.hny", "line": "17", "code": "    assert bank.inquiry(?b, acc, amount)" },
    "1365": { "file": "banktest.hny", "line": "18", "code": "    print(\"done deposit: \", self)" },
    "1366": { "file": "banktest.hny", "line": "18", "code": "    print(\"done deposit: \", self)" },
    "1367": { "file": "banktest.hny", "line": "18", "code": "    print(\"done deposit: \", self)" },
    "1368": { "file": "banktest.hny", "line": "18", "code": "    print(\"done deposit: \", self)" },
    "1369": { "file": "banktest.hny", "line": "18", "code": "    print(\"done deposit: \", self)" },
    "1370": { "file": "banktest.hny", "line": "18", "code": "    print(\"done deposit: \", self)" },
    "1371": { "file": "banktest.hny", "line": "18", "code": "    print(\"done deposit: \", self)" },
    "1372": { "file": "banktest.hny", "line": "18", "code": "    print(\"done deposit: \", self)" },
    "1373": { "file": "banktest.hny", "line": "18", "code": "    print(\"done deposit: \", self)" },
    "1374": { "file": "banktest.hny", "line": "20", "code": "def withdraw_test(acc, amount):" },
    "1375": { "file": "banktest.hny", "line": "20", "code": "def withdraw_test(acc, amount):" },
    "1376": { "file": "banktest.hny", "line": "21", "code": "    print(\"call withdraw: \", self)" },
    "1377": { "file": "banktest.hny", "line": "21", "code": "    print(\"call withdraw: \", self)" },
    "1378": { "file": "banktest.hny", "line": "21", "code": "    print(\"call withdraw: \", self)" },
    "1379": { "file": "banktest.hny", "line": "21", "code": "    print(\"call withdraw: \", self)" },
    "1380": { "file": "banktest.hny", "line": "21", "code": "    print(\"call withdraw: \", self)" },
    "1381": { "file": "banktest.hny", "line": "21", "code": "    print(\"call withdraw: \", self)" },
    "1382": { "file": "banktest.hny", "line": "21", "code": "    print(\"call withdraw: \", self)" },
    "1383": { "file": "banktest.hny", "line": "21", "code": "    print(\"call withdraw: \", self)" },
    "1384": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1385": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1386": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1387": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1388": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1389": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1390": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1391": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1392": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1393": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1394": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1395": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1396": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1397": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1398": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1399": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1400": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1401": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1402": { "file": "banktest.hny", "line": "22", "code": "    assert bank.withdraw(?b, acc, amount)" },
    "1403": { "file": "banktest.hny", "line": "23", "code": "    print(\"done withdraw: \", self)" },
    "1404": { "file": "banktest.hny", "line": "23", "code": "    print(\"done withdraw: \", self)" },
    "1405": { "file": "banktest.hny", "line": "23", "code": "    print(\"done withdraw: \", self)" },
    "1406": { "file": "banktest.hny", "line": "23", "code": "    print(\"done withdraw: \", self)" },
    "1407": { "file": "banktest.hny", "line": "23", "code": "    print(\"done withdraw: \", self)" },
    "1408": { "file": "banktest.hny", "line": "23", "code": "    print(\"done withdraw: \", self)" },
    "1409": { "file": "banktest.hny", "line": "23", "code": "    print(\"done withdraw: \", self)" },
    "1410": { "file": "banktest.hny", "line": "23", "code": "    print(\"done withdraw: \", self)" },
    "1411": { "file": "banktest.hny", "line": "23", "code": "    print(\"done withdraw: \", self)" },
    "1412": { "file": "banktest.hny", "line": "25", "code": "def transfer_test(acctFrom, acctTo, amount):" },
    "1413": { "file": "banktest.hny", "line": "25", "code": "def transfer_test(acctFrom, acctTo, amount):" },
    "1414": { "file": "banktest.hny", "line": "26", "code": "    print(\"call transfer: \", self)" },
    "1415": { "file": "banktest.hny", "line": "26", "code": "    print(\"call transfer: \", self)" },
    "1416": { "file": "banktest.hny", "line": "26", "code": "    print(\"call transfer: \", self)" },
    "1417": { "file": "banktest.hny", "line": "26", "code": "    print(\"call transfer: \", self)" },
    "1418": { "file": "banktest.hny", "line": "26", "code": "    print(\"call transfer: \", self)" },
    "1419": { "file": "banktest.hny", "line": "26", "code": "    print(\"call transfer: \", self)" },
    "1420": { "file": "banktest.hny", "line": "26", "code": "    print(\"call transfer: \", self)" },
    "1421": { "file": "banktest.hny", "line": "26", "code": "    print(\"call transfer: \", self)" },
    "1422": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1423": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1424": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1425": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1426": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1427": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1428": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1429": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1430": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1431": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1432": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1433": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1434": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1435": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1436": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1437": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1438": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1439": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1440": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1441": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1442": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1443": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1444": { "file": "banktest.hny", "line": "27", "code": "    assert bank.transfer(?b, acctFrom, acctTo, amount)" },
    "1445": { "file": "banktest.hny", "line": "28", "code": "    print(\"done transfer: \", self)" },
    "1446": { "file": "banktest.hny", "line": "28", "code": "    print(\"done transfer: \", self)" },
    "1447": { "file": "banktest.hny", "line": "28", "code": "    print(\"done transfer: \", self)" },
    "1448": { "file": "banktest.hny", "line": "28", "code": "    print(\"done transfer: \", self)" },
    "1449": { "file": "banktest.hny", "line": "28", "code": "    print(\"done transfer: \", self)" },
    "1450": { "file": "banktest.hny", "line": "28", "code": "    print(\"done transfer: \", self)" },
    "1451": { "file": "banktest.hny", "line": "28", "code": "    print(\"done transfer: \", self)" },
    "1452": { "file": "banktest.hny", "line": "28", "code": "    print(\"done transfer: \", self)" },
    "1453": { "file": "banktest.hny", "line": "28", "code": "    print(\"done transfer: \", self)" },
    "1454": { "file": "banktest.hny", "line": "31", "code": "for i in {1..NINQ}:" },
    "1455": { "file": "banktest.hny", "line": "31", "code": "for i in {1..NINQ}:" },
    "1456": { "file": "banktest.hny", "line": "31", "code": "for i in {1..NINQ}:" },
    "1457": { "file": "banktest.hny", "line": "31", "code": "for i in {1..NINQ}:" },
    "1458": { "file": "banktest.hny", "line": "31", "code": "for i in {1..NINQ}:" },
    "1459": { "file": "banktest.hny", "line": "31", "code": "for i in {1..NINQ}:" },
    "1460": { "file": "banktest.hny", "line": "32", "code": "    amount = choose {1..5}" },
    "1461": { "file": "banktest.hny", "line": "32", "code": "    amount = choose {1..5}" },
    "1462": { "file": "banktest.hny", "line": "32", "code": "    amount = choose {1..5}" },
    "1463": { "file": "banktest.hny", "line": "33", "code": "    spawn inq_test(i)" },
    "1464": { "file": "banktest.hny", "line": "33", "code": "    spawn inq_test(i)" },
    "1465": { "file": "banktest.hny", "line": "33", "code": "    spawn inq_test(i)" },
    "1466": { "file": "banktest.hny", "line": "33", "code": "    spawn inq_test(i)" },
    "1467": { "file": "banktest.hny", "line": "33", "code": "    spawn inq_test(i)" },
    "1468": { "file": "banktest.hny", "line": "33", "code": "    spawn inq_test(i)" },
    "1469": { "file": "banktest.hny", "line": "35", "code": "for i in {1..NDEP}:" },
    "1470": { "file": "banktest.hny", "line": "35", "code": "for i in {1..NDEP}:" },
    "1471": { "file": "banktest.hny", "line": "35", "code": "for i in {1..NDEP}:" },
    "1472": { "file": "banktest.hny", "line": "35", "code": "for i in {1..NDEP}:" },
    "1473": { "file": "banktest.hny", "line": "35", "code": "for i in {1..NDEP}:" },
    "1474": { "file": "banktest.hny", "line": "35", "code": "for i in {1..NDEP}:" },
    "1475": { "file": "banktest.hny", "line": "35", "code": "for i in {1..NDEP}:" },
    "1476": { "file": "banktest.hny", "line": "36", "code": "    amount = choose {1..5}" },
    "1477": { "file": "banktest.hny", "line": "36", "code": "    amount = choose {1..5}" },
    "1478": { "file": "banktest.hny", "line": "36", "code": "    amount = choose {1..5}" },
    "1479": { "file": "banktest.hny", "line": "37", "code": "    spawn deposit_test(i, amount)" },
    "1480": { "file": "banktest.hny", "line": "37", "code": "    spawn deposit_test(i, amount)" },
    "1481": { "file": "banktest.hny", "line": "37", "code": "    spawn deposit_test(i, amount)" },
    "1482": { "file": "banktest.hny", "line": "37", "code": "    spawn deposit_test(i, amount)" },
    "1483": { "file": "banktest.hny", "line": "37", "code": "    spawn deposit_test(i, amount)" },
    "1484": { "file": "banktest.hny", "line": "37", "code": "    spawn deposit_test(i, amount)" },
    "1485": { "file": "banktest.hny", "line": "37", "code": "    spawn deposit_test(i, amount)" },
    "1486": { "file": "banktest.hny", "line": "37", "code": "    spawn deposit_test(i, amount)" },
    "1487": { "file": "banktest.hny", "line": "37", "code": "    spawn deposit_test(i, amount)" },
    "1488": { "file": "banktest.hny", "line": "37", "code": "    spawn deposit_test(i, amount)" },
    "1489": { "file": "banktest.hny", "line": "37", "code": "    spawn deposit_test(i, amount)" },
    "1490": { "file": "banktest.hny", "line": "37", "code": "    spawn deposit_test(i, amount)" },
    "1491": { "file": "banktest.hny", "line": "39", "code": "for i in {1..NINQ}:" },
    "1492": { "file": "banktest.hny", "line": "39", "code": "for i in {1..NINQ}:" },
    "1493": { "file": "banktest.hny", "line": "39", "code": "for i in {1..NINQ}:" },
    "1494": { "file": "banktest.hny", "line": "39", "code": "for i in {1..NINQ}:" },
    "1495": { "file": "banktest.hny", "line": "39", "code": "for i in {1..NINQ}:" },
    "1496": { "file": "banktest.hny", "line": "39", "code": "for i in {1..NINQ}:" },
    "1497": { "file": "banktest.hny", "line": "39", "code": "for i in {1..NINQ}:" },
    "1498": { "file": "banktest.hny", "line": "40", "code": "    amount = choose {1..5}" },
    "1499": { "file": "banktest.hny", "line": "40", "code": "    amount = choose {1..5}" },
    "1500": { "file": "banktest.hny", "line": "40", "code": "    amount = choose {1..5}" },
    "1501": { "file": "banktest.hny", "line": "41", "code": "    spawn withdraw_test(i, amount)" },
    "1502": { "file": "banktest.hny", "line": "41", "code": "    spawn withdraw_test(i, amount)" },
    "1503": { "file": "banktest.hny", "line": "41", "code": "    spawn withdraw_test(i, amount)" },
    "1504": { "file": "banktest.hny", "line": "41", "code": "    spawn withdraw_test(i, amount)" },
    "1505": { "file": "banktest.hny", "line": "41", "code": "    spawn withdraw_test(i, amount)" },
    "1506": { "file": "banktest.hny", "line": "41", "code": "    spawn withdraw_test(i, amount)" },
    "1507": { "file": "banktest.hny", "line": "41", "code": "    spawn withdraw_test(i, amount)" },
    "1508": { "file": "banktest.hny", "line": "41", "code": "    spawn withdraw_test(i, amount)" },
    "1509": { "file": "banktest.hny", "line": "41", "code": "    spawn withdraw_test(i, amount)" },
    "1510": { "file": "banktest.hny", "line": "41", "code": "    spawn withdraw_test(i, amount)" },
    "1511": { "file": "banktest.hny", "line": "41", "code": "    spawn withdraw_test(i, amount)" },
    "1512": { "file": "banktest.hny", "line": "41", "code": "    spawn withdraw_test(i, amount)" },
    "1513": { "file": "banktest.hny", "line": "43", "code": "for i in {1..NTRA}:" },
    "1514": { "file": "banktest.hny", "line": "43", "code": "for i in {1..NTRA}:" },
    "1515": { "file": "banktest.hny", "line": "43", "code": "for i in {1..NTRA}:" },
    "1516": { "file": "banktest.hny", "line": "43", "code": "for i in {1..NTRA}:" },
    "1517": { "file": "banktest.hny", "line": "43", "code": "for i in {1..NTRA}:" },
    "1518": { "file": "banktest.hny", "line": "43", "code": "for i in {1..NTRA}:" },
    "1519": { "file": "banktest.hny", "line": "43", "code": "for i in {1..NTRA}:" },
    "1520": { "file": "banktest.hny", "line": "44", "code": "    for j in {1..NTRA}:" },
    "1521": { "file": "banktest.hny", "line": "44", "code": "    for j in {1..NTRA}:" },
    "1522": { "file": "banktest.hny", "line": "44", "code": "    for j in {1..NTRA}:" },
    "1523": { "file": "banktest.hny", "line": "44", "code": "    for j in {1..NTRA}:" },
    "1524": { "file": "banktest.hny", "line": "44", "code": "    for j in {1..NTRA}:" },
    "1525": { "file": "banktest.hny", "line": "44", "code": "    for j in {1..NTRA}:" },
    "1526": { "file": "banktest.hny", "line": "45", "code": "        amount = choose {1..5}" },
    "1527": { "file": "banktest.hny", "line": "45", "code": "        amount = choose {1..5}" },
    "1528": { "file": "banktest.hny", "line": "45", "code": "        amount = choose {1..5}" },
    "1529": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1530": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1531": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1532": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1533": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1534": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1535": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1536": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1537": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1538": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1539": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1540": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1541": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1542": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1543": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1544": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1545": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1546": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1547": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1548": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" },
    "1549": { "file": "banktest.hny", "line": "46", "code": "        spawn transfer_test(i, j, amount)" }
  }
}
